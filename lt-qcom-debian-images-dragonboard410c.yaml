- job:
    name: lt-qcom-debian-images-dragonboard410c
    project-type: freestyle
    defaults: global
    logrotate:
        daysToKeep: 30
        numToKeep: 30
    properties:
        - authorization:
            anonymous:
                - job-read
                - job-extended-read
                - job-workspace
            linaro-landing-team-qualcomm-personnel:
                - job-build
                - job-cancel
    parameters:
        - string:
            name: DEVICE_TYPE
            default: 'dragonboard-410c'
        - string:
            name: LAVA_SERVER
            default: 'https://validation.linaro.org/RPC2/'
        - string:
            name: QA_SERVER
            default: 'https://qa-reports.linaro.org'
        - string:
            name: VENDOR
            default: 'linaro'
        - string:
            name: OS_FLAVOUR
            default: 'buster'
        - string:
            name: PLATFORM_NAME
            default: 'dragonboard-410c'
        - string:
            name: FAI_BOARD_CLASS
            default: 'DB410C'
        - string:
            name: ROOTFS
            default: 'developer,1800M alip,3G installer,1024M'
        - string:
            name: SDCARD
            default: 'developer,4G'
        - string:
            name: ROOTFS_PARTLABEL
            default: 'rootfs'
        - string:
            name: DTBS
            default: 'qcom/apq8016-sbc.dtb'
        - string:
            name: SERIAL_CONSOLE
            default: 'ttyMSM0'
        - string:
            name: BOOTIMG_PAGESIZE
            default: '2048'
    disabled: false
    node: docker-stretch-arm64
    display-name: 'Qualcomm Debian based images for Snapdragon 410'
    scm:
        - git:
            url: https://git.linaro.org/ci/fai.git
            refspec: +refs/heads/master:refs/remotes/origin/master
            name: origin
            branches:
                - refs/heads/master
            skip-tag: true
            shallow-clone: true
            wipe-workspace: false
    wrappers:
        - timestamps
        - build-name:
            name: '#${BUILD_NUMBER}-${GIT_REVISION,length=8}'
        - credentials-binding:
            - text:
                credential-id: QA_REPORTS_TOKEN
                variable: QA_REPORTS_TOKEN
    builders:
        - shell:
            !include-raw: lt-qcom-debian-images/builders-fai.sh
        - shell:
            !include-raw: lt-qcom-debian-images/installer-dragonboard-410c.sh
        - shell:
            !include-raw: lt-qcom-debian-images/sdcard-dragonboard-410c.sh
        - linaro-publish-token:
            host: builds.96boards.org
        - shell: |
            #!/bin/bash
            set -ex
            trap cleanup_exit INT TERM EXIT
            cleanup_exit()
            {
                # cleanup here, only in case of error in this script
                # normal cleanup deferred to later
                [ $? = 0 ] && exit;
                sudo git clean -fdxq
            }

            # Create MD5SUMS file
            (cd out && md5sum * > MD5SUMS.txt)

            wget -q ${BUILD_URL}consoleText -O out/build-log-${JOB_NAME}-${BUILD_NUMBER}.txt

            # Publish to snapshots
            test -d ${HOME}/bin || mkdir ${HOME}/bin
            wget https://git.linaro.org/ci/publishing-api.git/blob_plain/HEAD:/linaro-cp.py -O ${HOME}/bin/linaro-cp.py
            time python ${HOME}/bin/linaro-cp.py \
                 --server ${PUBLISH_SERVER} \
                 --link-latest \
                 out snapshots/dragonboard410c/${VENDOR}/debian/${BUILD_NUMBER}
        - shell: |
            #!/bin/bash

            rm -rf configs
            git clone --depth 1 http://git.linaro.org/ci/job/configs.git

            # main parameters
            export DEPLOY_OS=debian
            export OS_INFO=debian-${OS_FLAVOUR}
            export BOOT_OS_PROMPT=\'root@linaro-alip:~#\'

            # boot and rootfs parameters
            export PUB_DEST=https://builds.96boards.org/snapshots/dragonboard410c/${VENDOR}/debian/${BUILD_NUMBER}

            export BOOT_URL=${PUB_DEST}/boot-${VENDOR}-${OS_FLAVOUR}-${PLATFORM_NAME}-${BUILD_NUMBER}.img.gz
            export BOOT_URL_COMP="gz"
            export LXC_BOOT_FILE=`basename ${BOOT_URL} .gz`
            export ROOTFS_URL=${PUB_DEST}/${VENDOR}-${OS_FLAVOUR}-alip-${PLATFORM_NAME}-${BUILD_NUMBER}.img.gz
            export ROOTFS_URL_COMP="gz"
            export LXC_ROOTFS_FILE=`basename ${ROOTFS_URL} .gz`

            # XXX: the debian rootfs images are build small as possible, resize
            # to be able install LAVA test overlay, by now to 3GB is enough
            export RESIZE_ROOTFS=3G

            python configs/openembedded-lkft/submit_for_testing.py \
                --device-type ${DEVICE_TYPE} \
                --build-number ${BUILD_NUMBER} \
                --lava-server ${LAVA_SERVER} \
                --qa-server ${QA_SERVER} \
                --qa-server-team qcomlt \
                --qa-server-project ${OS_INFO} \
                --git-commit ${BUILD_NUMBER} \
                --template-path configs/lt-qcom/lava-job-definitions \
                --template-base-pre base_template.yaml \
                --template-names template.yaml template-wifi.yaml template-bt.yaml
    publishers:
        - groovy-postbuild:
            script:
                !include-raw: openembedded-lkft/postbuild.groovy
        - groovy-postbuild:
            script: |
                def build_number = manager.build.number
                def vendor = manager.build.buildVariables.get('VENDOR')
                def url = "http://builds.96boards.org/snapshots/dragonboard410c/${vendor}/debian/${build_number}/"
                def desc = "&nbsp;<a href='${url}'>Build location<t/a>"

                if (manager.build.result == hudson.model.Result.SUCCESS) {
                  manager.build.setDescription(desc)
                }
        - email:
            recipients: 'fathi.boudra@linaro.org'
        - email-ext:
            recipients: 'nicolas.dechesne@linaro.org qa-team@linaro.org anibal.limon@linaro.org'
            always: true
        - ircbot:
            channels:
                - name: '#linaro-lt-qcomm'
                  password: ${LT_QCOM_KEY}
