- job:
    name: 96boards-reference-grub-efi-arm64
    project-type: freestyle
    defaults: global
    logrotate:
        daysToKeep: 30
        numToKeep: 30
    properties:
        - authorization:
            anonymous:
                - job-read
                - job-extended-read
                - job-workspace
            linaro:
                - job-read
                - job-extended-read
                - job-build
                - job-cancel
    disabled: false
    node: docker-jessie-arm64
    display-name: 'DELETE ME'
    wrappers:
        - timestamps
    builders:
        - linaro-publish-token
        - shell: |
            #!/bin/bash

            set -ex

            trap cleanup_exit INT TERM EXIT

            cleanup_exit()
            {
              cd ${WORKSPACE}
              rm -rf out
            }

            GRUB_EFI_BIN_PKG=grub-efi-arm64-bin
            echo "deb http://repo.linaro.org/ubuntu/linaro-overlay jessie main" > local.list
            sudo cp local.list /etc/apt/sources.list.d/
            sudo apt-get update
            sudo apt-get install -y --no-install-recommends $GRUB_EFI_BIN_PKG python-requests

            mkdir out

            cat << EOF > out/grub.configfile
            search.fs_label rootfs root
            set prefix=(\$root)'/boot/grub'
            configfile \$prefix/grub.cfg
            EOF

            cat << EOF > out/grub-sd.configfile
            set root=(hd1,msdos2)
            set prefix=(\$root)'/boot/grub'
            configfile \$prefix/grub.cfg
            EOF

            GRUB_MODULES="boot chain configfile echo efinet eval ext2 fat font gettext gfxterm gzio help linux loadenv lsefi normal part_gpt part_msdos read regexp search search_fs_file search_fs_uuid search_label terminal terminfo test tftp time"
            grub-mkimage \
              --verbose \
              --config=out/grub.configfile \
              --output=out/grubaa64.efi \
              --format=arm64-efi \
              $GRUB_MODULES

            grub-mkimage \
              --verbose \
              --config=out/grub-sd.configfile \
              --output=out/grubaa64-sd.efi \
              --format=arm64-efi \
              $GRUB_MODULES

            # Build information
            cat > out/HEADER.textile << EOF

            h4. Reference Platform - GRUB UEFI

            GRUB UEFI build consumed by the Reference Platform Builds

            Build Description:
            * Build URL: "$BUILD_URL":$BUILD_URL
            * Grub modules used:

            EOF
            echo -n "bc. " >> out/HEADER.textile
            echo $GRUB_MODULES >> out/HEADER.textile
            cat >> out/HEADER.textile << EOF

            * Grub config used (roofs search with label):

            EOF
            echo -n "bc. " >> out/HEADER.textile
            cat out/grub.configfile >> out/HEADER.textile
            cat >> out/HEADER.textile << EOF

            * Grub config used (sdcard):

            EOF
            echo -n "bc. " >> out/HEADER.textile
            cat out/grub-sd.configfile >> out/HEADER.textile
            cat >> out/HEADER.textile << EOF

            * $GRUB_EFI_BIN_PKG package:

            EOF
            echo -n "bc. " >> out/HEADER.textile
            apt-cache show $GRUB_EFI_BIN_PKG >> out/HEADER.textile

            # Create MD5SUMS file
            (cd out && md5sum g* > MD5SUMS.txt)

            # Publish
            test -d ${HOME}/bin || mkdir ${HOME}/bin
            wget https://git.linaro.org/ci/publishing-api.git/blob_plain/HEAD:/linaro-cp.py -O ${HOME}/bin/linaro-cp.py
            time python ${HOME}/bin/linaro-cp.py \
              --server ${PUBLISH_SERVER} \
              --link-latest \
              out reference-platform/components/grub/${BUILD_NUMBER}
    publishers:
        - email:
            recipients: 'fathi.boudra@linaro.org riku.voipio@linaro.org'

