- project:
    name: tcwg-llvm-kernel
    target:
      - aarch64:
          node: tcwg-d05_64-build
          docker_arch: arm64
      - armv8l:
          node: tcwg-d05_32-build
          docker_arch: armhf
    toolchain_name:
      - llvm:
          binutils_branch: no_binutils_branch
          gcc_branch: no_gcc_branch
    toolchain_ver:
      - master:
          llvm_branch: master
      - release:
          llvm_branch: release_70
    linux:
      - next:
          linux_url: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
          linux_branch: master
      - mainline:
          linux_url: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
          linux_branch: master
      - stable:
          linux_url: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git
          linux_branch: linux-4.18.y
      - lts:
          linux_url: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git
          linux_branch: linux-4.14.y
    linux_config:
      - defconfig
      - defconfig_nolse
      - allmodconfig
      - allyesconfig
      - allnoconfig
    component:
      - llvm
      - linux
    exclude:
      - target: armv8l
        linux_config: defconfig_nolse
    jobs:
      - 'tcwg-{toolchain_name}-kernel-trigger-{target}-{toolchain_ver}-{linux}-{linux_config}-{component}'
      - 'tcwg-{toolchain_name}-kernel-build-{target}-{toolchain_ver}-{linux}-{linux_config}'
      - 'tcwg-{toolchain_name}-kernel-bisect-{target}-{toolchain_ver}-{linux}-{linux_config}'
- view:
    name: tcwg-llvm-kernel
    view-type: list
    regex: 'tcwg-llvm-kernel.*'

- project:
    name: tcwg-gnu-kernel
    target:
      - aarch64:
          node: tcwg-x86_64-build
          docker_arch: amd64
      - armv8l:
          node: tcwg-x86_64-build
          docker_arch: amd64
    toolchain_name:
      - gnu:
          llvm_branch: no_llvm_branch
    toolchain_ver:
      - master:
          binutils_branch: master
          gcc_branch: master
      - release:
          binutils_branch: binutils-2_31-branch
          gcc_branch: gcc-8-branch
    linux:
      - next:
          linux_url: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
          linux_branch: master
      - mainline:
          linux_url: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
          linux_branch: master
      - stable:
          linux_url: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git
          linux_branch: linux-4.18.y
      - lts:
          linux_url: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git
          linux_branch: linux-4.14.y
    linux_config:
      - defconfig
      - defconfig_nolse
      - allmodconfig
      - allyesconfig
      - allnoconfig
    component:
      - binutils
      - gcc
      - linux
    exclude:
      - target: armv8l
        linux_config: defconfig_nolse
    jobs:
      - 'tcwg-{toolchain_name}-kernel-trigger-{target}-{toolchain_ver}-{linux}-{linux_config}-{component}'
      - 'tcwg-{toolchain_name}-kernel-build-{target}-{toolchain_ver}-{linux}-{linux_config}'
      - 'tcwg-{toolchain_name}-kernel-bisect-{target}-{toolchain_ver}-{linux}-{linux_config}'
- view:
    name: tcwg-gnu-kernel
    view-type: list
    regex: 'tcwg-gnu-kernel.*'

- scm:
    name: llvm-scm
    scm:
        - git:
            url: 'https://github.com/llvm-project/llvm-project-20170507.git'
            branches:
              - 'refs/heads/{llvm_branch}'
            basedir: llvm
            skip-tag: true
            sparse-checkout:
              paths:
                - llvm/README.txt
            reference-repo: /home/tcwg-buildslave/snapshots-ref/llvm-project-20170507.git
            wipe-workspace: false
            clean:
              before: true
            prune: true
- scm:
    name: binutils-scm
    scm:
        - git:
            url: 'git://sourceware.org/git/binutils-gdb.git'
            branches:
              - 'refs/heads/{binutils_branch}'
            basedir: binutils
            skip-tag: true
            sparse-checkout:
              paths:
                - README
            reference-repo: /home/tcwg-buildslave/snapshots-ref/binutils-gdb.git
            wipe-workspace: false
            clean:
              before: true
            prune: true
- scm:
    name: gcc-scm
    scm:
        - git:
            url: 'git://gcc.gnu.org/git/gcc.git'
            branches:
              - 'refs/heads/{gcc_branch}'
            basedir: gcc
            skip-tag: true
            sparse-checkout:
              paths:
                - README
            reference-repo: /home/tcwg-buildslave/snapshots-ref/gcc.git
            wipe-workspace: false
            clean:
              before: true
            prune: true
- scm:
    name: linux-scm
    scm:
        - git:
            url: '{linux_url}'
            branches:
              - 'refs/heads/{linux_branch}'
            basedir: linux
            skip-tag: true
            sparse-checkout:
              paths:
                - README
            reference-repo: /home/tcwg-buildslave/snapshots-ref-new/linux.git
            wipe-workspace: false
            clean:
              before: true
            prune: true

- property:
    name: default_properties
    properties:
      - authorization:
          anonymous:
            - job-read
            - job-extended-read
          linaro:
            - job-build
            - job-cancel
      - build-discarder:
          days-to-keep: 30
          num-to-keep: 30

- job-template:
    name: tcwg-{toolchain_name}-kernel-trigger-{target}-{toolchain_ver}-{linux}-{linux_config}-{component}
    project-type: freestyle
    defaults: global
    properties:
      - default_properties
      - build-blocker:
          blocking-jobs:
            - "tcwg-{toolchain_name}-kernel-build-{target}-{toolchain_ver}-{linux}-{linux_config}"
            - "tcwg-{toolchain_name}-kernel-bisect-{target}-{toolchain_ver}-{linux}-{linux_config}"
          queue-scanning: 'ALL'
    disabled: false
    node: tcwg-coordinator
    concurrent: false
    display-name: 'TCWG BBB RRv6 Trigger {target} @ {toolchain_name}-{toolchain_ver} @ Linux-{linux}-{linux_config} @ {component}'
    workspace: workspace/tcwg-{toolchain_name}-kernel/$JOB_NAME
    scm:
      - '{component}-scm':
          llvm_branch: '{llvm_branch}'
          binutils_branch: '{binutils_branch}'
          gcc_branch: '{gcc_branch}'
          linux_url: '{linux_url}'
          linux_branch: '{linux_branch}'
#    triggers:
#        - pollscm:
#            cron: '@daily'
    wrappers:
        - timeout:
            timeout: 600
        - timestamps
    builders:
      - trigger-builds:
          - project: tcwg-{toolchain_name}-kernel-build-{target}-{toolchain_ver}-{linux}-{linux_config}
            predefined-parameters: |
              current_project={component}
              current_rev=$GIT_COMMIT

- parameter:
    name: llvm-parameters
    parameters:
      - choice:
          name: current_project
          choices:
            - llvm
            - linux
          description: 'Project to {action}'

- parameter:
    name: gnu-parameters
    parameters:
      - choice:
          name: current_project
          choices:
            - binutils
            - gcc
            - linux
          description: 'Project to {action}'

- scm:
    name: jenkins-scripts
    scm:
      - git:
          url: https://git-us.linaro.org/toolchain/jenkins-scripts.git
          refspec: +refs/heads/*:refs/remotes/origin/* +refs/changes/*:refs/changes/*
          branches:
            - $scripts_branch
          basedir: jenkins-scripts
          skip-tag: true
          reference-repo: /home/tcwg-buildslave/snapshots-ref/jenkins-scripts.git
          wipe-workspace: false
          clean:
            before: true
          prune: true

- job-template:
    name: tcwg-{toolchain_name}-kernel-build-{target}-{toolchain_ver}-{linux}-{linux_config}
    project-type: freestyle
    defaults: global
    properties:
      - default_properties
      - build-blocker:
          blocking-jobs:
            - "tcwg-{toolchain_name}-kernel-bisect-{target}-{toolchain_ver}-{linux}-{linux_config}"
          queue-scanning: 'ALL'
    parameters:
      - '{toolchain_name}-parameters':
          action: build
      - string:
          name: current_rev
          default: default
          description: "Git rev of $current_project to build"
      - bool:
          name: reset_baseline
          default: false
          description: "Whether to reset baseline to results of this build"
      - string:
          name: distro
          default: xenial
          description: 'Distro image to use'
      - string:
          name: scripts_branch
          default: llvm-kernel-v4
          description: 'Scripts revision to use'
    disabled: false
    node: '{node}'
    concurrent: false
    display-name: 'TCWG BBB RRv6 Build {target} @ {toolchain_name}-{toolchain_ver} @ Linux-{linux}-{linux_config}'
    workspace: workspace/tcwg-{toolchain_name}-kernel/$JOB_NAME
    scm:
        - jenkins-scripts
    wrappers:
        - timeout:
            timeout: 600
        - timestamps
        - ssh-agent-credentials:
            # tcwg-buildslave user id
            users:
                - 'e0958a95-204f-4c14-a66c-5e2be6c5d50a'
    builders:
        - shell: |
            #!/bin/bash
            set -e
            echo "=== Print out environment for debug purposes ==="
            env | grep "GERRIT\|GIT"
            echo "=== Environment end  ==="
            set -x
            build_name="#$BUILD_NUMBER-$current_project"
            rm -rf prev_artifacts
            echo "$build_name" > build-name
        - build-name-setter:
            name: 'build-name'
            file: true
        - conditional-step:
            condition-kind: strings-match
            condition-string1: '${{ENV,var="reset_baseline"}}'
            condition-string2: 'false'
            steps:
              - copyartifact:
                  project: tcwg-{toolchain_name}-kernel-build-{target}-{toolchain_ver}-{linux}-{linux_config}
                  target: prev_artifacts
                  optional: true
                  which-build: last-successful
        - shell: |
            #!/bin/bash
            set -ex
            ./jenkins-scripts/docker-run.sh \
            --arch {docker_arch} \
            --distro $distro \
            -- \
            ./jenkins-scripts/tcwg-{toolchain_name}-kernel.sh \
            @@{toolchain_name}-{toolchain_ver} @@linux-{linux} \
            --mode "jenkins-full" \
            --current_project "$current_project" \
            --current_rev "$current_rev" \
            --linux_config "{linux_config}" \
            --verbose true || true

            name="#$BUILD_NUMBER-$current_project"
            if [ -e artifacts/linux_n_obj ]; then
              name="$name-O$(cat artifacts/linux_n_obj)"
            fi
            if [ -e artifacts/distance-to-baseline ]; then
              name="$name-B$(cat artifacts/distance-to-baseline)"
            fi
            if $reset_baseline; then
              name="$name-baseline"
              # Don't trigger bisect if this [possibly failed] build is
              # the new baseline.
              rm -f artifacts/trigger-bisect-on-failure
            fi
            if [ ! -f artifacts/failures ]; then
              rm -f artifacts/trigger-bisect-on-failure
            fi
            if [ -f artifacts/trigger-bisect-on-failure ]; then
              name="$name-bisect"
              echo "distro=$distro" >> artifacts/trigger-bisect-on-failure
              echo "scripts_branch=$scripts_branch" >> artifacts/trigger-bisect-on-failure
            fi

            echo "$name" > build-name
        - build-name-setter:
            name: 'build-name'
            file: true
        - conditional-step:
            condition-kind: file-exists
            condition-filename: artifacts/trigger-bisect-on-failure
            steps:
              - trigger-builds:
                  - project: tcwg-{toolchain_name}-kernel-bisect-{target}-{toolchain_ver}-{linux}-{linux_config}
                    property-file: artifacts/trigger-bisect-on-failure
        - shell: |
            #!/bin/bash
            if [ -f artifacts/failures ]; then
              exit 1
            fi
    publishers:
        - archive:
            artifacts: 'artifacts/**'
            latest-only: false

- job-template:
    name: tcwg-{toolchain_name}-kernel-bisect-{target}-{toolchain_ver}-{linux}-{linux_config}
    project-type: freestyle
    defaults: global
    properties:
        - default_properties
    parameters:
      - '{toolchain_name}-parameters':
          action: bisect
      - string:
          name: baseline_rev
          default: default
          description: "Baseline revision"
      - string:
          name: bad_rev
          default: default
          description: "Bad revision"
      - string:
          name: distro
          default: xenial
          description: 'Distro image to use'
      - string:
          name: scripts_branch
          default: llvm-kernel-v4
          description: 'Scripts revision to use'
    disabled: false
    node: '{node}'
    concurrent: false
    display-name: 'TCWG BBB RRv6 Bisect {target} @ {toolchain_name}-{toolchain_ver} @ Linux-{linux}-{linux_config}'
    workspace: workspace/tcwg-{toolchain_name}-kernel/$JOB_NAME
    scm:
      - jenkins-scripts
    wrappers:
        - timeout:
            timeout: 600
        - timestamps
        - ssh-agent-credentials:
            # tcwg-buildslave user id
            users:
                - 'e0958a95-204f-4c14-a66c-5e2be6c5d50a'
    builders:
        - shell: |
            #!/bin/bash
            set -e
            echo "=== Print out environment for debug purposes ==="
            env | grep "GERRIT\|GIT"
            echo "=== Environment end  ==="
            set -x
            build_name="#$BUILD_NUMBER-$current_project"
            rm -rf prev_artifacts
            echo "$build_name" > build-name
        - build-name-setter:
            name: 'build-name'
            file: true
        - copyartifact:
            project: tcwg-{toolchain_name}-kernel-build-{target}-{toolchain_ver}-{linux}-{linux_config}
            target: prev_artifacts
            optional: true
            which-build: last-successful
        - shell: |
            #!/bin/bash
            set -ex
            ./jenkins-scripts/docker-run.sh \
            --arch {docker_arch} \
            --distro $distro \
            -- \
            ./jenkins-scripts/tcwg-bisect-{toolchain_name}-kernel.sh \
            @@{toolchain_name}-{toolchain_ver} @@linux-{linux} \
            --current_project "$current_project" \
            --baseline_rev "$baseline_rev" \
            --bad_rev "$bad_rev" \
            --linux_config "{linux_config}" \
            --verbose true

            for i in bisect-artifacts/trigger-1-reset-baseline bisect-artifacts/trigger-2-build-master; do
              if [ -f $i ]; then
                echo "distro=$distro" >> $i
                echo "scripts_branch=$scripts_branch" >> $i
              fi
            done

            echo "#$BUILD_NUMBER-$current_project-$(cat bisect-artifacts/first-bad)" > build-name

            CI_MAIL_RECIPIENTS="tcwg-validation@linaro.org, maxim.kuvyrkov@linaro.org"
            if [ -f bisect-artifacts/first-bad ]; then
              # Email developers only on successful bisects.
              CI_MAIL_RECIPIENTS="$CI_MAIL_RECIPIENTS, ndesaulniers@google.com"
              case "$current_project" in
                linux) CI_MAIL_RECIPIENTS="$CI_MAIL_RECIPIENTS, arnd@linaro.org, mark.brown@linaro.org" ;;
                *) CI_MAIL_RECIPIENTS="$CI_MAIL_RECIPIENTS, yvan.roux@linaro.org" ;;
              esac
            fi
            echo "CI_MAIL_RECIPIENTS=$CI_MAIL_RECIPIENTS" > ci_mail_parameters
            # DEBUG OVERRIDE
            if true || [ x"$ROOT_BUILD_CAUSE" != x"SCMTRIGGER" ]; then
              echo "maxim.kuvyrkov@linaro.org" > ci_mail_parameters
            fi
        - build-name-setter:
            name: 'build-name'
            file: true
        - trigger-builds:
            - project: tcwg-{toolchain_name}-kernel-build-{target}-{toolchain_ver}-{linux}-{linux_config}
              property-file: bisect-artifacts/trigger-1-reset-baseline
        - trigger-builds:
            - project: tcwg-{toolchain_name}-kernel-build-{target}-{toolchain_ver}-{linux}-{linux_config}
              property-file: bisect-artifacts/trigger-2-build-master
        - inject:
            properties-file: ci_mail_parameters
    publishers:
        - archive:
            artifacts: 'bisect-artifacts/**'
            latest-only: false
        - email-ext:
            recipients: '${{CI_MAIL_RECIPIENTS}}'
            content-type: text
            body: |
                Bisected ${{current_project}} on {target} @ {toolchain_name}-{toolchain_ver} @ linux-{linux}-{linux_config} between bad ${{bad_rev}} and baseline ${{baseline_rev}} .
                Bisect log: ${{PROJECT_URL}}${{BUILD_NUMBER}}/artifact/bisect-artifacts/bisect.log/*view*/
                Artifacts: ${{PROJECT_URL}}${{BUILD_NUMBER}}/artifact/bisect-artifacts/
                Build URL: ${{PROJECT_URL}}${{BUILD_NUMBER}}/
                Build log: ${{PROJECT_URL}}${{BUILD_NUMBER}}/consoleText
            always: true

- project:
    name: tcwg-llvm-kernel-dead
    suffix:
      - build-aarch64
      - build-armv8l
      - bisect-aarch64
      - bisect-armv8l
      - trigger-llvm
      - trigger-linux
      - trigger-llvm-master-next
      - trigger-llvm-master-mainline
      - trigger-llvm-master-stable
      - trigger-llvm-master-lts
      - trigger-llvm-release-next
      - trigger-llvm-release-mainline
      - trigger-llvm-release-stable
      - trigger-llvm-release-lts
      - trigger-linux-master-next
      - trigger-linux-master-mainline
      - trigger-linux-master-stable
      - trigger-linux-master-lts
      - trigger-linux-release-next
      - trigger-linux-release-mainline
      - trigger-linux-release-stable
      - trigger-linux-release-lts
    jobs:
      - 'tcwg-llvm-kernel-{suffix}'

- job-template:
    name: tcwg-llvm-kernel-{suffix}
    project-type: freestyle
    defaults: global
    properties:
        - authorization:
            anonymous:
                - job-read
                - job-extended-read
            linaro:
                - job-build
                - job-cancel
        - build-discarder:
            days-to-keep: 30
            num-to-keep: 30
    disabled: true
    node: tcwg-coordinator
    display-name: 'TCWG DEAD tcwg-llvm-kernel-{suffix}'

- project:
    name: tcwg-llvm-kernel-dead-2
    task:
      - trigger
      - build
      - bisect
    target:
      - aarch64
      - armv8l
    llvm:
      - master
      - release
    linux:
      - next
      - mainline
      - stable
      - lts
    repo:
      - "-llvm"
      - "-linux"
      - ""
    exclude:
      - task: trigger
        repo: ""
      - task:
          - build
          - bisect
        repo:
          - "-llvm"
          - "-linux"
    jobs:
      - 'tcwg-llvm-kernel-{task}-{target}-{llvm}-{linux}{repo}'

- job-template:
    name: tcwg-llvm-kernel-{task}-{target}-{llvm}-{linux}{repo}
    project-type: freestyle
    defaults: global
    properties:
        - authorization:
            anonymous:
                - job-read
                - job-extended-read
            linaro:
                - job-build
                - job-cancel
        - build-discarder:
            days-to-keep: 30
            num-to-keep: 30
    disabled: true
    node: tcwg-coordinator
    display-name: 'TCWG DEAD tcwg-llvm-kernel-{task}-{target}-{llvm}-{linux}{repo}'
