#See http://docs.openstack.org/infra/jenkins-job-builder/genindex.html
- job:
    name: tcwg-benchmark
    project-type: freestyle
    node: master
    display-name: 'TCWG Benchmark'
    description: 'Dispatch TCWG benchmark jobs to LAVA'
    logrotate:
        daysToKeep: 30
        numToKeep: 30
        artifactNumToKeep: 1
    properties:
        - authorization:
            anonymous:
                - job-read
                - job-extended-read
            bernie.ogden@linaro.org:
                - job-build
                - job-cancel
        - copyartifact:
            projects: tcwg-post-build-lava
    parameters:
        - choice:
            name: BENCHMARK
            choices:
              - Coremark-Pro
              - CPU2006
              - CPU2000
              - fakebench
        - choice:
            name: TARGET_CONFIG
            choices:
              - Juno-A53
              - Juno-A57
              - KVM (x86_64)
        - choice:
            name: TRIPLE
            choices:
              - (Derive from toolchain)
              - (Native)
              - arm-linux-gnueabihf
              - aarch64-linux-gnu
            description: |
              A triple describing the target (and its execution state).
        - string:
            name: PREBUILT
            description: |
              A prebuilt benchmark tarball as produced by abe or direct make invocation.
              Leave blank if you have supplied TOOLCHAIN.
              If produced by abe, tar up the contents of build/_host_/_target_.
              If produced by direct make, tar up the top-level git repository (but you can exclude the .git dir).
              If this option is given, no build will be performed and the compiler_flags and make_flags fields will be ignored.
        - string:
            name: TOOLCHAIN
            description: |
              Toolchain to use - use local filesystem path, or formats interpretable by wget or scp/rsync.
              Leave blank if you have supplied PREBUILT.
              Examples --
              /usr/bin/gcc
              aarch64-linux-gnu-clang
              http://releases.linaro.org/14.09/components/toolchain/binaries/gcc-linaro-aarch64-linux-gnu-4.9-2014.09_linux.tar.xz
              my.name@my.server:location_of_my_toolchain
        - string:
            name: SYSROOT
            description: |
              Sysroot to use - use local filesystem path, or formats interpretable by wget or scp/rsync.
              Leave blank if you have supplied PREBUILT.
        - string:
            name: COMPILER_FLAGS
            description: |
              Flags to pass to compiler when building the benchmark.
              Leave blank if you have supplied PREBUILT.
        - string:
            name: MAKE_FLAGS
            description: |
              Flags to pass to make when building the benchmark.
              Leave blank if you have supplied PREBUILT.
        - string:
            name: RUN_FLAGS
            description: |
              Flags to pass to benchmark framework at runtime.
              Examples --
              SPEC -- --size test --iterations 1 int (run 1 iteration of the int suite using the test workload)

        #Remove this as soon as the uinstance does not need it.
        - string:
            name: PUBLIC_KEY
            description: 'Public key for main instance jobs.'
            default: |
              ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCzlCPpuwMRSXZNq4Mut/GuitOhEturcsl9X1iNjOMGZXbtfBC8TCSXqotkziuYXpej1FCdXn3FEQsVw6Mw3I9Wq1p9okkgzVdsNzHAIob8ras/e9kOeJZGY5gSGBYf3t1MubAyaa033MJ+e3NRC4sbUmeeN3d9PD+Wc9QC3en9qfSpm6hh9EFHOHOjFk5+W0YZ83AL1PgalqL/hCN2/p9a8S1fsfDkfTgEh1XFIOiLds0fNzzmyXepxuA1n696iuSFMCIwmNcCfwRwRgt012UPgZu3avegYbDyijk8EtgFBuEA5OvX91BTHmaSjicsD9nJN63ms88l9OZMeTlPVjkD
        #TODO Change the default of this when we have the uinstance - at that point, we should be using the 'safe benchmarks' bundle stream
        - string:
            name: BUNDLE_STREAM
            default: '/anonymous/bernie.ogden/'
            description: 'Bundle stream for main instance jobs.'

        #TODO Change the default of this when we have merged back
        - string:
            name: TESTDEF_REVISION
            default: bernie/benchmarking-uinstance-stability
            description: Branch of abe to drive the run
        - string:
            name: TEMPLATE
            default: config/bench/jobdefs/template-uinstance.yaml
        - string:
            name: TIMEOUT
            description: |
              Timeout, in seconds from when the LAVA job starts to run.
    wrappers:
        - timeout:
            timeout: 120
        - workspace-cleanup
    builders:
      - shell: |
          #!/bin/bash
          set -eux
          set -o pipefail

          #Process TARGET_CONFIG
          TARGET_CONFIG="${TARGET_CONFIG,,}"
          if test x"${TARGET_CONFIG%% *}" = xkvm; then #" - fix syntax highlighting
            TARGET_CONFIG=kvm
          fi

          #Process TRIPLE
          if test x"${TRIPLE}" = x"(Derive from TOOLCHAIN)"; then
            if test -z "${TOOLCHAIN}"; then
              echo "Cannot derive TRIPLE from TOOLCHAIN if no TOOLCHAIN is given!" >&2
              exit 1
            fi
            TRIPLE=
            for y in aarch64-linux-gnu arm-linux-gnueabihf; do
              if echo "${TOOLCHAIN}" | grep -q "${y}"; then
                if test -z "${TRIPLE}"; then
                  TRIPLE="${y}"
                else
                  echo "Cannot derive unique TRIPLE from ambiguous TOOLCHAIN '${TOOLCHAIN}'" >&2
                  exit 1
                fi
              fi
            done
            #If TRIPLE is still empty then it means 'Native', which is what we want
          elif test x"${TRIPLE}" = x"(Native)"; then
            TRIPLE=
          fi

          export LAVA_SERVER=192.168.16.2/RPC2/
          export BUNDLE_SERVER=lava.tcwglab/RPC2/

          git clone --depth 1 -b ${TESTDEF_REVISION} https://git.linaro.org/toolchain/abe

          #Set variables for both post-build-lava and yaml-to-json
          tmpfile=`mktemp`
          bash -x ./abe/scripts/Benchmark.sh > "${tmpfile}"
          while read x; do
            export "$x"
            done < "${tmpfile}"
          rm "${tmpfile}"
          #Must be exported to be visible to Benchmark.sh - env vars that
          #happen to be job params are already exported, so don't need this

          #Parameters for post-build-lava
          cat << EOF > post_build_lava_parameters
          CUSTOM_JSON_URL=${BUILD_URL}/artifact/lava-jobdef.json

          #Server to dispatch to, as opposed to server where bundle stream is.
          #post-build-lava takes responsibility for specifying a protocol.
          LAVA_SERVER=${LAVA_SERVER}

          #DEVICE_TYPE to placate pbl - we don't actually use it
          DEVICE_TYPE=${TARGET_DEVICE_TYPE}
          EOF

          #Convert YAML to JSON
          git clone --depth 1 https://git.linaro.org/ci/lci-build-tools
          ./lci-build-tools/yaml-to-json.py \
            abe/config/bench/jobdefs/template-uinstance.yaml > lava-jobdef.json

    publishers:
      - archive:
          artifacts: lava-jobdef.json
      - trigger-parameterized-builds:
        - project: tcwg-post-build-lava
          condition: SUCCESS
          property-file: post_build_lava_parameters
      - email:
          recipients: 'bernie.ogden@linaro.org'
