- job:
    name: u-boot-am57xx-evm
    project-type: freestyle
    defaults: global
    properties:
        - authorization:
            anonymous:
                - job-read
                - job-extended-read
            linaro:
                - job-read
                - job-extended-read
                - job-build
                - job-cancel
        - build-discarder:
            days-to-keep: 30
            num-to-keep: 30
    disabled: false
    node: docker-buster-amd64
    display-name: 'U-Boot upstream (mainline) for am57xx-evm'
    scm:
        - git:
            url: https://github.com/u-boot/u-boot
            refspec: +refs/heads/master:refs/remotes/origin/master
            name: origin
            branches:
                - refs/heads/master
            skip-tag: true 
            shallow-clone: false
            wipe-workspace: false
    triggers:
        - pollscm: 'H/5 * * * *'
    wrappers:
        - timestamps
        - build-name:
            name: '#${BUILD_NUMBER}-${GIT_REVISION,length=8}'
    builders:
        - linaro-publish-token
        - shell: |
            #!/bin/bash

            env |grep GIT

            set -ex

            trap cleanup_exit INT TERM EXIT

            cleanup_exit()
            {
              cd ${WORKSPACE}
              rm -rf build out
              git clean -fdx
              git reset --hard
              sudo umount bootfs || true
              sudo kpartx -dv x15-install.img || true
            }

            sudo apt-get update
            sudo apt-get install -y libssl-dev python-requests rsync \
                swig libpython-dev gcc-arm-linux-gnueabihf \
                parted kpartx pigz

            ls
            uname -m
            cat Makefile
            export CC=arm-linux-gnueabihf-
            make ARCH=arm CROSS_COMPILE=${CC} distclean
            make ARCH=arm CROSS_COMPILE=${CC} am57xx_evm_defconfig
            make ARCH=arm CROSS_COMPILE=${CC}

            mkdir -p out bootfs

            # create x15 boot image
            dd if=/dev/zero of=x15-install.img bs=48 seek=1M count=0
            /sbin/parted --script x15-install.img mklabel msdos
            /sbin/parted --script x15-install.img mkpart p fat32 0 48
            /sbin/parted --script x15-install.img set 1 boot
            for device in $(sudo kpartx -avs x15-install.img | cut -d' ' -f3); do
              partition=$(echo ${device} | cut -d'p' -f3)
              case "${partition}" in
                1)
                  sudo mkfs.fat -F16 /dev/mapper/${device}
                  sudo mount /dev/mapper/${device} bootfs
                  ;;
              esac
            done
            sudo cp MLO bootfs
            sudo cp u-boot.img bootfs

            sudo umount bootfs
            sudo kpartx -dv x15-install.img
            time pigz -9 x15-install.img
            mv x15-install.img.gz out/x15-u-boot-sd-${BUILD_NUMBER}.img.gz

            cp .config out/config
            cp MLO u-boot.img u-boot-dtb.bin arch/arm/dts/*.dtb spl/u-boot-spl.bin spl/u-boot-spl.dtb out/
            test -d ${HOME}/bin || mkdir ${HOME}/bin
            wget -q https://git.linaro.org/ci/publishing-api.git/blob_plain/HEAD:/linaro-cp.py -O ${HOME}/bin/linaro-cp.py
            time python3 ${HOME}/bin/linaro-cp.py \
              --api_version 3 \
              --link-latest \
              out components/kernel/u-boot/${BUILD_NUMBER}
    publishers:
        - email:
            recipients: 'vishal.bhoj@linaro.org'
