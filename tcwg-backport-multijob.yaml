- job:
    name: tcwg-backport-multijob
    project-type: multijob
    defaults: global
    logrotate:
        daysToKeep: 30
        numToKeep: 60
    properties:
        - authorization:
            anonymous:
                - job-read
                - job-extended-read
            linaro:
                - job-build
                - job-cancel
    parameters:
        - string:
            name: GERRIT_PATCHSET_REVISION
            default: refs/remotes/origin/linaro/gcc-5-branch
            description: 'Patched GCC revision'
        - string:
            name: GERRIT_BRANCH
            default: linaro-local/gcc-5-integration-branch
            description: 'Base GCC branch'
        - string:
            name: gcc_orig
            default: gcc_patch_prev
            description: 'Original GCC revision'
        - string:
            name: log_server
            default: dev-01.tcwglab:/home/tcwg-buildslave/logs
            description: 'Log_Server'
        - string:
            name: targets
            default: 'cross_main cross_aux native_x86'
            description: 'Which target toolchains to build: cross_main cross_aux native_x86 native_armv8'
        - string:
            name: abe_branch
            default: refs/remotes/origin/stable
            description: 'ABE revision to use'
        - bool:
            name: rebuild
            default: false
            description: 'Rebuild the toolchain even if results are already on logserver'
    disabled: false
    node: tcwg-x86_64-dev-01
    concurrent: true
    display-name: 'TCWG ZZZ Backport Multijob'
    scm:
        - git:
            url: https://git-us.linaro.org/toolchain/gcc.git
            refspec: +refs/changes/*:refs/remotes/changes/*
            branches:
                - ${GERRIT_PATCHSET_REVISION}
            skip-tag: true
            wipe-workspace: false
            reference-repo: /home/tcwg-buildslave/snapshots-ref/gcc.git
            choosing-strategy: gerrit
    triggers:
        - gerrit:
            server-name: 'review.linaro.org'
            override-votes: true
            gerrit-build-successful-verified-value: 1
            gerrit-build-failed-verified-value: -1
            gerrit-build-successful-codereview-value: 1
            gerrit-build-failed-codereview-value: -1
            readable-message: true
            successful-message: 'Sanity check OK'
            failure-message: 'Sanity check FAIL'
            trigger-for-unreviewed-patches: true
            projects:
                - project-compare-type: 'PLAIN'
                  project-pattern: 'toolchain/gcc'
                  branches:
                    - branch-compare-type: 'ANT'
                      branch-pattern: '**'
    wrappers:
        - timeout:
            timeout: 3000
        - timestamps
        - ssh-agent-credentials:
            # tcwg-buildslave user id
            users:
                - 'e0958a95-204f-4c14-a66c-5e2be6c5d50a'
        - build-name:
            name: '#${BUILD_NUMBER}-${ENV,var="GERRIT_PATCHSET_REVISION"}'
    builders:
        - shell: |
            #!/bin/bash

            set -e
            set -x

            gcc_patch_rev=$(git rev-parse $GERRIT_PATCHSET_REVISION)
            if [ x"$gcc_orig" = x"gcc_patch_prev" ]; then
              gcc_orig="$gcc_patch_rev^"
            fi
            gcc_orig_rev=$(git rev-parse $gcc_orig)

            case ${GERRIT_BRANCH} in
              *gcc-5*)
                binutils=binutils-gdb.git/linaro_binutils-2_25-branch
                glibc=glibc.git~release/2.21/master
                newlib=newlib.git~linaro_newlib-branch
                ;;
              *gcc-6*)
                binutils=binutils-gdb.git/binutils-2_26-branch
                glibc=glibc.git~release/2.23/master
                newlib=newlib.git~linaro_newlib-branch
                ;;
              *)
                binutils=binutils-gdb.git/binutils-2_26-branch
                glibc=glibc.git~release/2.23/master
                newlib=newlib.git~linaro_newlib-branch
                ;;
            esac

            cat <<EOF > gcc_orig_parameters
            override=gcc=gcc.git@$gcc_orig_rev binutils=${binutils} glibc=${glibc} newlib=${newlib}
            log_name=tcwg-backport-$gcc_orig_rev/\$(uname -m).\$target
            rebuild=${rebuild}
            dont_fail=false
            log_server=$log_server
            targets=$targets
            abe_branch=$abe_branch
            EOF

            cat <<EOF > gcc_patch_parameters
            override=gcc=gcc.git@$gcc_patch_rev binutils=${binutils} glibc=${glibc} newlib=${newlib}
            log_name=tcwg-backport-$gcc_patch_rev/\$(uname -m).\$target
            rebuild=${rebuild}
            dont_fail=false
            log_server=$log_server
            targets=$targets
            abe_branch=$abe_branch
            EOF

            cat <<EOF > compare_results_parameters
            ref_logs=tcwg-backport-$gcc_orig_rev
            new_logs=tcwg-backport-$gcc_patch_rev
            log_server=$log_server
            abe_branch=$abe_branch
            EOF
        - multijob:
            name: 'Builds'
            condition: COMPLETED
            projects:
              - name: tcwg-buildfarm
                property-file: gcc_orig_parameters
                restrict-matrix-project: '(label=="tcwg-x86_64-cam" && target!="schroot-armhf-native") || (label=="tcwg-aarch64-build" && (target=="native" || target=="schroot-armhf-native"))'
              - name: tcwg-buildfarm
                property-file: gcc_patch_parameters
                restrict-matrix-project: '(label=="tcwg-x86_64-cam" && target!="schroot-armhf-native") || (label=="tcwg-aarch64-build" && (target=="native" || target=="schroot-armhf-native"))'
        - multijob:
            name: 'Comparison'
            condition: COMPLETED
            projects:
              - name: tcwg-compare-results
                property-file: compare_results_parameters
