- job:
    name: jdk8-jtreg-test-persist-results
    project-type: matrix
    defaults: global
    description: |
        * Writes the results to $HOME/srv/openjdk/openjdk8-jtreg-nightly-tests.
    properties:
        - authorization:
            linaro:
                - job-read
            openjdk-members:
                - job-build
                - job-cancel
        - build-discarder:
            days-to-keep: 30
            num-to-keep: 10
            artifact-num-to-keep: 5
    disabled: false
    node: aarch64-06
    display-name: 'OpenJDK 8 - Write jtreg tests results'
    axes:
        - axis:
            type: user-defined
            name: JVM_VARIANT
            values:
                - server
# SRDM: Disable client runs while waiting for LEG-347 to be fixed.
#                - client
        - axis:
            type: user-defined
            name: BUILD_TYPE
            values:
                - release
        - axis:
            type: user-defined
            name: JTREG_CATEGORY
            values:
                - hotspot
                - langtools
        - axis:
            type: slave
            name: label
            values:
                - aarch64-06
    execution-strategy:
        sequential: true
    wrappers:
        - workspace-cleanup:
            dirmatch: false
        - timestamps
        - matrix-tie-parent:
            node: aarch64-06
    builders:
        - copyartifact:
            project: jdk8-jtreg-test
            filter: 'out/jtreg-results-${JTREG_CATEGORY}-${JVM_VARIANT}-${BUILD_TYPE}.tar.gz'
            target: incoming
            flatten: true
        - copyartifact:
            project: jdk8-build-image
            filter: 'out/jdk8-${JVM_VARIANT}-${BUILD_TYPE}.tar.gz'
            target: incoming
            flatten: true
        - shell: |
            #!/bin/bash

            set -exu

            tree -f .

            PERSIST=$HOME/srv/openjdk

            result_tarball=${WORKSPACE}/incoming/BUILD_TYPE=${BUILD_TYPE},JTREG_CATEGORY=${JTREG_CATEGORY},JVM_VARIANT=${JVM_VARIANT},label=${label}/jtreg-results-${JTREG_CATEGORY}-${JVM_VARIANT}-${BUILD_TYPE}.tar.gz

            image_tarball=${WORKSPACE}/incoming/BUILD_TYPE=${BUILD_TYPE},JVM_VARIANT=${JVM_VARIANT},label=${label}/jdk8-${JVM_VARIANT}-${BUILD_TYPE}.tar.gz

            : ${YEAR:=$(date +%Y)}
            : ${DAY_OF_YEAR:=$(date +%j)}

            basedir=$PERSIST/openjdk8-jtreg-nightly-tests
            src_dir=${basedir}/src/${YEAR}/${DAY_OF_YEAR}
            work_dir=${basedir}/builds/${JVM_VARIANT}-${BUILD_TYPE}/${YEAR}/${DAY_OF_YEAR}/JTwork-${JTREG_CATEGORY}
            report_dir=${basedir}/reports/${JVM_VARIANT}-${BUILD_TYPE}/${JTREG_CATEGORY}/$(uname -m)/${YEAR}/${DAY_OF_YEAR}/JTreport
            image_dir=${basedir}/builds/${JVM_VARIANT}-${BUILD_TYPE},label=${label}/${YEAR}/${DAY_OF_YEAR}/images/j2sdk-image

            mkdir -p ${image_dir}

            tar -C ${basedir} \
              --transform="s/YYY__DAY_OF_YEAR__YYY/$DAY_OF_YEAR/;s/XXX__YEAR__XXX/$YEAR/" \
              --show-transformed-names \
              -xvf ${result_tarball}

            tar -C ${image_dir} \
              --strip-components=1 \
              --show-transformed-names \
              -xvf ${image_tarball}

            # Change location.
            # Match the exact output of the cron-based scripts.
            sed_expr1=$(echo s!XXX__YEAR__XXX!$YEAR!g)
            sed_expr2=$(echo s!YYY__DAY_OF_YEAR__YYY!$DAY_OF_YEAR!g)

            find ${work_dir} -type f -exec perl -p -i -e "$sed_expr1" {} \;
            find ${work_dir} -type f -exec perl -p -i -e "$sed_expr2" {} \;

            find ${report_dir} -type f -exec perl -p -i -e "$sed_expr1" {} \;
            find ${report_dir} -type f -exec perl -p -i -e "$sed_expr2" {} \;
