- project:
    name: tcwg_gnu
    toolchain_name:
      - gnu:
          gcc_url: https://gcc.gnu.org/git/gcc.git
          init_configuration: 'true'
    toolchain_ver:
      - master:
          gcc_branch: master
      - release:
          gcc_branch: gcc-8-branch
    target:
      - aarch64:
          node: tcwg-sq_64-build
      - arm:
          node: tcwg-sq_32-build
    component:
      - gcc
    bootstrap_config:
      - bootstrap
      - bootstrap_ubsan
      - bootstrap_O3
    jobs:
      - 'tcwg_gnu-trigger-{component}-{toolchain_name}-{toolchain_ver}-{target}-{bootstrap_config}'
      - 'tcwg_gnu-build-{toolchain_name}-{toolchain_ver}-{target}-{bootstrap_config}'
      - 'tcwg_gnu-bisect-{toolchain_name}-{toolchain_ver}-{target}-{bootstrap_config}'
- view:
    name: tcwg_gnu
    view-type: list
    regex: 'tcwg_gnu-b.*'

- scm:
    name: gcc-scm
    scm:
        - git:
            url: '{gcc_url}'
            branches:
              - 'refs/heads/{gcc_branch}'
            basedir: gcc
            skip-tag: true
            sparse-checkout:
              paths:
                - README
            reference-repo: /home/tcwg-buildslave/snapshots-ref/gcc.git
            wipe-workspace: false
            clean:
              before: true
            prune: true
- property:
    name: default_properties
    properties:
      - authorization:
          anonymous:
            - job-read
            - job-extended-read
          linaro:
            - job-build
            - job-cancel
      - build-discarder:
          days-to-keep: 30
          num-to-keep: 30

- job-template:
    name: tcwg_gnu-trigger-{component}-{toolchain_name}-{toolchain_ver}-{target}-{bootstrap_config}
    project-type: freestyle
    defaults: global
    properties:
      - default_properties
      - build-blocker:
          blocking-jobs:
            - "tcwg_gnu-build-{toolchain_name}-{toolchain_ver}-{target}-{bootstrap_config}"
            - "tcwg_gnu-bisect-{toolchain_name}-{toolchain_ver}-{target}-{bootstrap_config}"
          queue-scanning: 'ALL'
    disabled: false
    node: tcwg-coordinator
    concurrent: false
    display-name: 'TCWG Trigger {toolchain_name}-{toolchain_ver}-{target}-{bootstrap_config} @ {component}'
    workspace: workspace/tcwg_gnu-{toolchain_name}/$JOB_NAME
    scm:
      - '{component}-scm':
          gcc_url: '{gcc_url}'
          gcc_branch: '{gcc_branch}'
    triggers:
      - pollscm:
          cron: 'H H * * *'
    wrappers:
        - timeout:
            timeout: 600
        - timestamps
    builders:
      - trigger-builds:
          - project: tcwg_gnu-build-{toolchain_name}-{toolchain_ver}-{target}-{bootstrap_config}
            predefined-parameters: |
              current_project={component}
              current_branch=$GIT_COMMIT

- parameter:
    name: gnu-parameters
    parameters:
      - choice:
          name: current_project
          choices:
            - gcc
          description: 'Project to {action}'

- scm:
    name: jenkins-scripts
    scm:
      - git:
          url: https://git-us.linaro.org/toolchain/jenkins-scripts.git
          refspec: +refs/heads/*:refs/remotes/origin/* +refs/changes/*:refs/changes/*
          branches:
            - $scripts_branch
          basedir: jenkins-scripts
          skip-tag: true
          reference-repo: /home/tcwg-buildslave/snapshots-ref/jenkins-scripts.git
          wipe-workspace: false
          clean:
            before: true
          prune: true

- job-template:
    name: tcwg_gnu-build-{toolchain_name}-{toolchain_ver}-{target}-{bootstrap_config}
    project-type: freestyle
    defaults: global
    properties:
      - default_properties
      - build-blocker:
          blocking-jobs:
            - "tcwg_gnu-bisect-{toolchain_name}-{toolchain_ver}-{target}-{bootstrap_config}"
          queue-scanning: 'ALL'
    parameters:
      - '{toolchain_name}-parameters':
          action: build
      - string:
          name: current_branch
          default: default
          description: "Git rev of $current_project to build"
      - bool:
          name: reset_baseline
          default: false
          description: "Whether to reset baseline to results of this build"
      - string:
          name: distro
          default: xenial
          description: 'Distro image to use'
      - string:
          name: scripts_branch
          default: tcwg_gnu
          description: 'Scripts revision to use'
    disabled: false
    node: '{node}'
    concurrent: false
    display-name: 'TCWG Build {toolchain_name}-{toolchain_ver}-{target}-{bootstrap_config}'
    workspace: workspace/tcwg_gnu-build-{toolchain_name}_$EXECUTOR_NUMBER
    scm:
      - jenkins-scripts
    wrappers:
      - timeout:
          timeout: 600
      - timestamps
      - ssh-agent-credentials:
          # tcwg-buildslave user id
          users:
            - 'e0958a95-204f-4c14-a66c-5e2be6c5d50a'
    builders:
        - shell: |
            #!/bin/bash
            set -ex
            # Delete artifacts now to avoid re-using stale artifacts if
            # below docker-run.sh fails to start up a container.
            rm -rf artifacts/
            mkdir -p artifacts/jenkins
            build_name="#$BUILD_NUMBER-$current_project"
            echo "$build_name" > artifacts/jenkins/build-name
        - build-name-setter:
            name: 'artifacts/jenkins/build-name'
            file: true
        - shell: |
            #!/bin/bash
            set -ex
            ./jenkins-scripts/docker-run.sh \
            --distro $distro \
            --label {node} \
            -- \
            ./jenkins-scripts/tcwg_gnu-build.sh \
            %% artifacts/jenkins/manifest.sh \
            --BUILD_URL "$BUILD_URL" \
            ==rr[ci_config] {toolchain_name}-{toolchain_ver}-{target}-{bootstrap_config} \
            ==rr[init_configuration] {init_configuration} \
            ==rr[gcc_url] {gcc_url} ==rr[gcc_branch] {gcc_branch} \
            ==rr[mode] "jenkins-full" \
            ==rr[current_project] "$current_project" \
            ==rr[current_branch] "$current_branch" \
            --reset_baseline "$reset_baseline" &
            res=0 && wait $! || res=$?

            if [ $res != 0 ]; then
              touch artifacts/failures
            fi

            name="#$BUILD_NUMBER-$current_project"
            if [ -e artifacts/results ]; then
              name="$name-R$(tail -n1 artifacts/results)"
            fi
            if [ -e artifacts/distance-to-baseline ]; then
              name="$name-B$(cat artifacts/distance-to-baseline)"
            fi
            if $reset_baseline; then
              name="$name-baseline"
              # Don't trigger bisect if this [possibly failed] build is
              # the new baseline.
              rm -f artifacts/trigger-bisect-on-failure
            fi
            if [ ! -f artifacts/failures ]; then
              rm -f artifacts/trigger-bisect-on-failure
            fi
            if [ -f artifacts/trigger-bisect-on-failure ]; then
              name="$name-bisect"
              echo "distro=$distro" >> artifacts/trigger-bisect-on-failure
              echo "scripts_branch=$scripts_branch" >> artifacts/trigger-bisect-on-failure
            fi

            echo "$name" > artifacts/jenkins/build-name
        - build-name-setter:
            name: 'artifacts/jenkins/build-name'
            file: true
        - conditional-step:
            condition-kind: file-exists
            condition-filename: artifacts/trigger-bisect-on-failure
            steps:
              - trigger-builds:
                  - project: tcwg_gnu-bisect-{toolchain_name}-{toolchain_ver}-{target}-{bootstrap_config}
                    property-file: artifacts/trigger-bisect-on-failure
        - shell: |
            #!/bin/bash
            if [ -f artifacts/failures ]; then
              exit 1
            fi
    publishers:
        - archive:
            artifacts: 'artifacts/**'
            latest-only: false

- job-template:
    name: tcwg_gnu-bisect-{toolchain_name}-{toolchain_ver}-{target}-{bootstrap_config}
    project-type: freestyle
    defaults: global
    properties:
      - default_properties
      - build-blocker:
          # Run at most 1 bisect job for all configurations.
          # Bisect jobs can easily run for 5+ hours, and a few of them
          # can hog the entire TCWG build farm for a long time.  Since
          # same regression tends to appear in multiple configurations,
          # run bisections for all configurations in-order.
          blocking-jobs:
            - "tcwg_gnu-bisect-.*"
          queue-scanning: 'BUILDABLE'
    parameters:
      - '{toolchain_name}-parameters':
          action: bisect
      - string:
          name: baseline_rev
          default: default
          description: "Baseline revision"
      - string:
          name: bad_rev
          default: default
          description: "Bad revision"
      - string:
          name: mail_recipients
          default: default
          description: "Comma-separated list of email recipients; use 'default' unless testing"
      - string:
          name: distro
          default: xenial
          description: 'Distro image to use'
      - string:
          name: scripts_branch
          default: tcwg_gnu
          description: 'Scripts revision to use'
    disabled: false
    node: '{node}'
    concurrent: false
    display-name: 'TCWG Bisect {toolchain_name}-{toolchain_ver}-{target}-{bootstrap_config}'
    workspace: workspace/tcwg_gnu-bisect-{toolchain_name}_$EXECUTOR_NUMBER
    scm:
      - jenkins-scripts
    wrappers:
      - timeout:
          timeout: 1440
      - timestamps
      - ssh-agent-credentials:
          # tcwg-buildslave user id
          users:
            - 'e0958a95-204f-4c14-a66c-5e2be6c5d50a'
    builders:
        - shell: |
            #!/bin/bash
            set -ex
            # Delete artifacts now to avoid re-using stale artifacts if
            # below docker-run.sh fails to start up a container.
            rm -rf artifacts/
            mkdir -p artifacts/jenkins
            build_name="#$BUILD_NUMBER-$current_project"
            echo "$build_name" > artifacts/jenkins/build-name
            # artifacts/jenkins/mail-*.txt will be overwritten in successful builds.
            echo "prathamesh.kulkarni@linaro.org" > artifacts/jenkins/mail-recipients.txt
            echo "Build $BUILD_URL failed" > artifacts/jenkins/mail-body.txt
        - build-name-setter:
            name: 'artifacts/jenkins/build-name'
            file: true
        - shell: |
            #!/bin/bash
            set -ex
            ./jenkins-scripts/docker-run.sh \
            --distro $distro \
            --label {node} \
            -- \
            ./jenkins-scripts/tcwg_kernel-bisect.sh \
            %% artifacts/manifests/bisect.sh \
            --BUILD_URL "$BUILD_URL" \
            --baseline_rev "$baseline_rev" \
            --bad_rev "$bad_rev" \
            --build_script "./jenkins-scripts/tcwg_gnu-build.sh" \
            --ci_project tcwg_gnu \
            -- \
            ==rr[ci_config] {toolchain_name}-{toolchain_ver}-{target}-{bootstrap_config}
            ==rr[gcc_url] {gcc_url} ==rr[gcc_branch] {gcc_branch} \
            ==rr[current_project] "$current_project"

            for i in artifacts/trigger-1-reset-baseline artifacts/trigger-2-build-master; do
              if [ -f $i ]; then
                echo "distro=$distro" >> $i
                echo "scripts_branch=$scripts_branch" >> $i
              fi
            done

            if [ x"$mail_recipients" != x"default" ]; then
              echo "$mail_recipients" > artifacts/jenkins/mail-recipients.txt
            fi
        - build-name-setter:
            name: 'artifacts/jenkins/build-name'
            file: true
        - conditional-step:
            condition-kind: file-exists
            condition-filename: artifacts/trigger-1-reset-baseline
            steps:
              - trigger-builds:
                  - project: tcwg_gnu-build-{toolchain_name}-{toolchain_ver}-{target}-{bootstrap_config}
                    property-file: artifacts/trigger-1-reset-baseline
        - conditional-step:
            condition-kind: file-exists
            condition-filename: artifacts/trigger-2-build-master
            steps:
              - trigger-builds:
                  - project: tcwg_gnu-build-{toolchain_name}-{toolchain_ver}-{target}-{bootstrap_config}
                    property-file: artifacts/trigger-2-build-master
    publishers:
        - archive:
            artifacts: 'artifacts/**'
            latest-only: false
        - email-ext:
            recipients: ${{FILE,path="artifacts/jenkins/mail-recipients.txt"}}
            content-type: text
            body: |
              ${{FILE,path="artifacts/jenkins/mail-body.txt"}}
            failure: true
            success: true
            send-to:
              - recipients
