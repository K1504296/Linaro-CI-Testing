- job:
    name: jdkX-build-release
    project-type: matrix
    defaults: global
    description: |
        * Configures and builds jdkX for release. Run after the source has passed tests.
        * Tags build with Linaro-YYMM as per normal release procedure.
        * The source tarball is copied from the jdkX-update-src-tree job.<br>
    properties:
        - authorization:
            anonymous:
                - job-read
                - job-extended-read
            openjdk-members:
                - job-build
                - job-cancel
        - build-discarder:
            days-to-keep: 30
            num-to-keep: 10
            artifact-num-to-keep: 5

    disabled: false
    node: j12-qrep-01
    display-name: 'OpenJDK JDK - Configure and build OpenJDK JDK Release'
    axes:
        - axis:
            type: user-defined
            name: JVM_VARIANT
            values:
                - server
        - axis:
            type: user-defined
            name: BUILD_TYPE
            values:
                - release
        - axis:
            type: slave
            name: label
            values:
                - j12-qrep-01
    execution-strategy:
        sequential: true
    wrappers:
        - workspace-cleanup:
            dirmatch: false
        - timestamps
        - matrix-tie-parent:
            node: j12-qrep-01
    builders:
        - copyartifact:
            project: jdkX-update-src-tree
            filter: 'out/jdkX.tar.gz'
            target: incoming
            flatten: true
#        - copyartifact:
#            project: archive-primordial-jdkX
#            filter: 'out/primordial-jdkX.tar.gz'
#            target: incoming
#            flatten: true
        - shell: |
            #!/bin/bash

            set -exu

            #export CCACHE_DIR=~/.ccache-${JVM_VARIANT}-${BUILD_TYPE}
            #ccache -M 1G
            #ccache -s
            export JVM_VARIANT=server

            # Generate files names dependent on year/month.
            RELEASE=$(date +%y%m)
            JDKDIR=jdkX-${JVM_VARIANT}-${BUILD_TYPE}-${RELEASE}
            JDK_SRCDIR=jdkX-src-${RELEASE}

            ccache_build_opts=--disable-ccache

            rm -rf jdk* primordial-jdk* build*

            cd ${HOME}/workspace/jdk-cache-files/jdk10
            export JAVA_HOME=${PWD}

            export PATH=${JAVA_HOME}/bin:${PATH}

            cd ${WORKSPACE}

            # Setup archive directory
            mkdir out

            # Extract sources from upstream job
            tar xaf incoming/jdkX.tar.gz

            mv jdkX $JDK_SRCDIR
            # Tar up the source before sullying it with a build.
            tar --exclude=.hg\* -acf out/jdkX-src-${RELEASE}.tar.xz $JDK_SRCDIR

            mv $JDK_SRCDIR $JDKDIR
            shopt -s nullglob

            # Configure and build
            mkdir -p build-stage1 build-stage2

            two_stage_build=0

            which java
            java -version

            if [ $two_stage_build = 1 ]; then
              pushd build-stage1
              sh ../$JDKDIR/configure --with-jvm-variants=${JVM_VARIANT} --with-debug-level=${BUILD_TYPE} --with-boot-jdk=${WORKSPACE}/primordial-jdkX ${ccache_build_opts}
              make images
              popd

              pushd build-stage2
              sh ../$JDKDIR/configure --with-jvm-variants=${JVM_VARIANT} \
                                        --with-debug-level=${BUILD_TYPE} \
                                        --with-boot-jdk=${WORKSPACE}/build-stage1/images/jdk \
                                        ${ccache_build_opts} \
                                        --with-version-opt="Linaro-$RELEASE" \
                                        --with-version-pre="release"
              make images
              popd
            else
              pushd build-stage2
              sh ../$JDKDIR/configure --with-jvm-variants=${JVM_VARIANT} \
                                        --with-debug-level=${BUILD_TYPE} \
                                        ${ccache_build_opts} \
                                        --with-version-opt="Linaro-$RELEASE" \
                                        --with-version-pre="release"
              make images
              popd
            fi

            # Archive the result
            artifact_name=jdkX-${JVM_VARIANT}-${BUILD_TYPE}-${RELEASE}

            # This is different from ordinary builds.
            tar -C build-stage2/images --exclude=\*.debuginfo --transform="s!^jdk!$artifact_name!" -acf out/${artifact_name}.tar.xz jdk
    publishers:
        - archive:
            artifacts: 'out/*.tar.xz'
        - email:
            recipients: 'stuart.monteith@linaro.org fathi.boudra@linaro.org'
