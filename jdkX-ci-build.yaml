- scm:
    name: jdkX
    scm:
        - hg:
            url: https://hg.openjdk.java.net/jdk/jdk
            clean: true
            subdir: jdkX
- job:
    name: jdkX-ci-build
    project-type: freestyle
    defaults: global
    description: |
        Updates source and builds OpenJDK frequently to ensure builds are successful.
    properties:
        - authorization:
            anonymous:
                - job-read
                - job-extended-read
                - job-workspace
            openjdk-members:
                - job-build
                - job-cancel
        - build-discarder:
            days-to-keep: 30 
            num-to-keep: 11
            artifact-num-to-keep: 5
    disabled: false
    node: aarch64-06
    display-name: 'OpenJDK JDK - CI Build'
    scm:
        - jdkX
    wrappers:
        - timestamps
    triggers:
        - pollscm:
            cron: '* H * * *'
    builders:
        - copyartifact:
            project: jtreg-build
            filter: 'jtreg-build-4.2.0-SNAPSHOT.tar.xz'
            flatten: true
        - shell: |
            #!/bin/bash

            set -exu

            #export CCACHE_DIR=~/.ccache-${JVM_VARIANT}-${BUILD_TYPE}
            #ccache -M 1G
            #ccache -s

            ccache_build_opts=--disable-ccache
            rm -rf jtreg
            tar xJf jtreg-build-4.2.0-SNAPSHOT.tar.xz

            cd ${HOME}/workspace/jdk-cache-files2/node/${NODE_NAME}/jdk10
            export JAVA_HOME=${PWD}

            export PATH=${JAVA_HOME}/bin:${PATH}

            cd ${WORKSPACE}

            shopt -s nullglob

            # Configure and build
            rm -rf build
            mkdir -p build

            which java
            java -version

            pushd build
            sh ../jdkX/configure --with-debug-level=fastdebug \
                ${ccache_build_opts} \
                 --with-jtreg=${WORKSPACE}/jtreg
            make images build-test-hotspot-jtreg-native build-test-jdk-jtreg-native
            popd

            # Archive the result
            rm -rf out
            mkdir out
            artifact_name=jdkX-ci-build
            tar -C build/images/jdk --exclude=\*.diz --transform="s!^./!$artifact_name/!" -acf out/${artifact_name}.tar.gz .

            # Archive test support files.
            tar -C build/ --exclude=hotspot/jtreg/native/support/\* --transform="s!^support/!${artifact_name}-support/support/!" -acf out/${artifact_name}-support.tar.gz support/test
    publishers:
        - archive:
            artifacts: 'out/*.tar.gz'
        - email-ext:
            reply-to: aarch64-port-dev@mail.openjdk.java.net
            subject: jdk/jdk Build ${BUILD_NUMBER}
            attach-build-log: true
            body: 'Build ${BUILD_URL}'
            fixed: true
            failure: true
            recipients: 'stuart.monteith@linaro.org'
