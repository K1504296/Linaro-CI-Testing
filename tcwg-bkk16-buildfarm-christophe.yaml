- job:
    name: tcwg-bkk16-buildfarm-christophe
    project-type: matrix
    defaults: global
    logrotate:
        daysToKeep: 30
        numToKeep: 30
    properties:
        - authorization:
            anonymous:
                - job-read
                - job-extended-read
            linaro:
                - job-build
                - job-cancel
    parameters:
        - string:
            name: override
            default: ''
            description: 'Versions of components to build; e.g. binutils=binutils-gdb.git/linaro_binutils-2_25-branch gcc=gcc.git~linaro/gcc-5-branch glibc=glibc.git~release/2.21/master'
        - string:
            name: host_x86_64_languages
            default: 'default'
            description: 'Languages to build for x86_64-hosted toolchains, e.g., "c,c++" or "all" or "default"'
        - string:
            name: host_aarchXX_languages
            default: 'c,c++'
            description: 'Languages to build for AArchXX-hosted toolchains, e.g., "c,c++" or "all" or "default"'
        - string:
            name: runtests
            default: 'x86_64-host'
            description: 'Run toolchain testsuites: "yes", "no", "x86_64-host"'
        - bool:
            name: try_bootstrap
            default: 'true'
            description: 'Attempt to bootstrap GCC for compatible host and target combinations'
        - string:
            name: excludecheck
            default: 'binutils gdb'
            description: 'Do not run "make check" on these components'
        - string:
            name: extraconfig
            default: ''
            description: 'Extra configuration files, syntax tool=path'
        - bool:
            name: rebuild
            default: true
            description: 'Rebuild the toolchain even if results are already on logserver'
        - string:
            name: log_name
            default: 'test-bkk16'
            description: 'Logname directory on logserver; leave empty for default'
        - bool:
            name: dont_fail
            default: false
            description: 'Do not fail the build'
        - string:
            name: log_server
            default: ex40-01.tcwglab.linaro.org:logs-bkk16
            description: 'Log_Server'
        - string:
            name: targets
            default: 'cross_main cross_aux native_x86'
            description: 'Which target toolchains to build: cross_main cross_aux native_x86 native_armv8'
        - string:
            name: abe_branch
            default: refs/remotes/origin/bkk16-christophe
            description: 'ABE revision to test'
    disabled: false
    node: tcwg-x86_64-cam
    child-workspace: $target
    concurrent: true
    display-name: 'TCWG YYY BKK16 BuildFarm Christophe'
    scm:
        - git:
            url: https://git-us.linaro.org/toolchain/abe.git
            refspec: +refs/changes/*:refs/remotes/changes/*
            branches:
                - $abe_branch
            skip-tag: true
            shallow-clone: true
            wipe-workspace: false
            clean:
                before: true
    axes:
        - axis:
            type: slave
            name: label
            values:
                - tcwg-x86_64-cam
                - tcwg-aarch64-build
        - axis:
            type: user-defined
            name: target
            values:
                - aarch64-linux-gnu
                - armv8l-linux-gnueabihf
                - arm-linux-gnueabi
                - arm-linux-gnueabihf
                - armeb-linux-gnueabihf
                - aarch64-none-elf
                - aarch64_be-none-elf
                - native
                - schroot-i386-native
                - schroot-armhf-native
    execution-strategy:
        combination-filter: |
            (label=="tcwg-x86_64-cam" && target!="schroot-armhf-native") || (label=="tcwg-aarch64-build" && (target=="native" || target=="schroot-armhf-native"))
        sequential: false
    wrappers:
        - timeout:
            timeout: 600
        - timestamps
        - ssh-agent-credentials:
            # tcwg-buildslave user id
            users:
                - 'e0958a95-204f-4c14-a66c-5e2be6c5d50a'
        - build-name:
            name: '#${BUILD_NUMBER}'
    builders:
        - shell: |
            #!/bin/bash

            set -e
            set -x

            case "$target--$(uname -m)" in
              native--aarch64|schroot-armhf-native--*) target_kind=native_armv8 ;;
              native--x86_64|schroot-i386-native--*) target_kind=native_x86 ;;
              armeb-linux-gnueabihf--*|*-none-elf--*) target_kind=cross_aux ;;
              *-linux-gnu*--*) target_kind=cross_main ;;
              *) echo "ERROR: Cannot handle target: $target"; exit 1 ;;
            esac

            if ! echo "$targets" | grep -q "$target_kind"; then
              echo "NOTE: Skipping target $target because $target_kind is not in list: $targets"
              exit 0
            fi

            case ${target} in
              schroot-*)
                schroot_arch=$(echo ${target} | sed -e "s/^schroot-\([^-]*\)-\(.*\)/\1/")
                target=$(echo ${target} | sed -e "s/^schroot-\([^-]*\)-\(.*\)/\2/")
                ;;
              *)
                case $(uname -m) in
                  x86_64) schroot_arch="amd64" ;;
                  aarch64) schroot_arch="arm64" ;;
                  *) echo "Unexpected architecture $(uname -m)"; exit 1 ;;
                esac
                ;;
            esac
            schroot_image="tcwg-build-${schroot_arch}-trusty"

            case $(uname -m) in
              x86_64) languages="$host_x86_64_languages" ;;
              *) languages="$host_aarchXX_languages" ;;
            esac

            case "$runtests-$(uname -m)" in
              "yes"-*) runtests_opt="--runtests" ;;
              "x86_64-host"-x86_64) runtests_opt="--runtests" ;;
              *) runtests_opt="" ;;
            esac

            if $try_bootstrap; then
              bootstrap="--bootstrap"
            else
              bootstrap=""
            fi

            if [ x"$log_name" != x"" ]; then
              eval "logname_opt=\"--logname $log_name\""
            fi

            if $rebuild; then
              norebuild=""
            else
              norebuild="--norebuild"
            fi

            excludecheck_opt=""
            for testsuite in $excludecheck; do
              excludecheck_opt="$excludecheck_opt --excludecheck $testsuite"
            done

            # If there were extraconfig options, extract the
            # corresponding repo
            if test -n "$extraconfig" ; then
              git clone http://git.linaro.org/people/christophe.lyon/abe-extraconfigs.git
            fi

            extraconfig_opt=""
            for config in $extraconfig; do
              case ${extraconfig} in
                *=*)
                  tool=${extraconfig%=*}
                  value=${extraconfig#*=}
                  ;;
                *)
                  echo ERROR: wrong extraconfig: $extraconfig
                  exit 1
                  ;;
              esac
              extraconfig_opt="${extraconfig_opt} --extraconfig $tool=$PWD/abe-extraconfigs/$value"
            done

            ulimit -u 5000

            session_id=$(schroot -b -c chroot:$schroot_image --preserve-environment)
            BUILD_SHELL="schroot -r -c session:$session_id --preserve-environment -- bash"
            $BUILD_SHELL -c "echo \"Build session is up; ulimit config:\"; ulimit -a"

            # Sometimes /dev/pts can't get unmounted on the first try.
            # Workaround by retrying.
            trap "{ schroot -f -e -c session:$session_id || { sleep 60 ; schroot -f -e -c session:$session_id; } }" 0

            result="0"
            ${BUILD_SHELL} -x ./jenkins.sh --target ${target} --override "$override" --languages ${languages} $bootstrap $runtests_opt $excludecheck_opt ${extraconfig_opt} --fileserver ex40-01.tcwglab.linaro.org/snapshots-ref --logserver $log_server $logname_opt $norebuild || result=$?

            echo "Result of jenkins.sh: $result"
            if $dont_fail; then
              result="0"
            fi
            exit $result
    publishers:
        - workspace-cleanup:
            include:
              - "**/.git"
            dirmatch: true
