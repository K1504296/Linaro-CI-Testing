- job:
    name: coresight
    project-type: matrix
    defaults: global
    logrotate:
        daysToKeep: 30
        numToKeep: 30
    properties:
        - authorization:
            anonymous:
                - job-read
                - job-extended-read
                - job-workspace
    parameters:
        - string:
            name: BUNDLE_STREAM_NAME
            default: '/public/team/linaro/coresight/'
        - string:
            name: LAVA_SERVER
            default: 'validation.linaro.org/RPC2/'
        - string:
            name: ROOTFS_BUILD_URL
            default: 'http://releases.linaro.org/15.03/openembedded/images/minimal-armv7a/linaro-image-minimal-genericarmv7a-20150323-328.rootfs.tar.gz'
        - string:
            name: ROOTFS_BUILD_NUMBER
            default: '328'
    disabled: true
    node: build
    child-workspace: .
    display-name: 'DELETE ME'
    scm:
        - git:
            url: http://git.linaro.org/kernel/coresight.git
            refspec: +refs/heads/master:refs/remotes/origin/master
            name: origin
            branches:
                - refs/heads/master
            skip-tag: true
            shallow-clone: true
            wipe-workspace: false
    axes:
        - axis:
            type: dynamic
            name: defconfig
            values:
                - defconfig_list
        - axis:
            type: slave
            name: label
            values:
                - build
    execution-strategy:
        sequential: true
    wrappers:
        - timestamps
        - build-name:
            name: '#${BUILD_NUMBER}-${GIT_REVISION,length=8}'
        - matrix-tie-parent:
            node: build
    builders:
        - linaro-publish-token
        - shell: |
            #!/bin/bash

            set -ex

            trap cleanup_exit INT TERM EXIT

            cleanup_exit()
            {
              cd ${WORKSPACE}
              rm -rf lci-build-tools
              rm -rf builddir*
              rm -rf out
              rm -f *deb
              git reset --hard
            }

            export LANG=C
            CCACHE_DIR="$HOME/ccache"
            CCACHE_UNIFY=1
            CCACHE_SLOPPINESS=file_macro,include_file_mtime,time_macros
            export CCACHE_DIR CCACHE_UNIFY CCACHE_SLOPPINESS
            export use_ccache=true
            export make_install=true
            export kernel_flavour="${defconfig}"
            export use_config_fragment=1
            export conf_filenames="arch/arm/configs/${defconfig}_defconfig linaro/configs/coresight.conf"
            export MAKE_DTBS=true
            export tcbindir="${HOME}/srv/toolchain/arm-tc-15.02/bin"
            export toolchain_url="http://releases.linaro.org/15.02/components/toolchain/binaries/arm-linux-gnueabihf/gcc-linaro-4.9-2015.02-3-x86_64_arm-linux-gnueabihf.tar.xz"

            case "${defconfig}" in
              hisi)
                export DEVICE_TYPE=d01
                ;;
              vexpress)
                export hwpack_type=vexpress
                export DEVICE_TYPE=vexpress-tc2
                ;;
            esac

            # Create coresight config fragment
            mkdir -p linaro/configs
            cat << EOF > linaro/configs/coresight.conf
            CONFIG_CORESIGHT=y
            CONFIG_CORESIGHT_LINKS_AND_SINKS=y
            CONFIG_CORESIGHT_LINK_AND_SINK_TMC=y
            CONFIG_CORESIGHT_SINK_TPIU=y
            CONFIG_CORESIGHT_SINK_ETBV10=y
            CONFIG_CORESIGHT_SOURCE_ETM3X=y
            CONFIG_LBDAF=y
            EOF

            test -d lci-build-tools || git clone https://git.linaro.org/git/ci/lci-build-tools.git lci-build-tools
            bash lci-build-tools/jenkins_kernel_build_inst

            # Publish to snapshots
            [ "${defconfig}" = "vexpress" ] && mv hwpack_linaro-${hwpack_type}* out/

            ${HOME}/bin/linaro-cp --api_version 3 out kernel-hwpack/coresight/${defconfig}/${BUILD_NUMBER}

            CCACHE_DIR=${CCACHE_DIR} ccache -M 50G
            CCACHE_DIR=${CCACHE_DIR} ccache -s

            KERNEL_URL=http://snapshots.linaro.org/kernel-hwpack/coresight/${defconfig}/${BUILD_NUMBER}
            DTB_URL=${KERNEL_URL}/dtbs
            [ "${defconfig}" = "vexpress" ] && HWPACK_BUILD_URL=${KERNEL_URL}/`ls out/hwpack_linaro-${hwpack_type}_*_armhf_supported.tar.gz |xargs basename`

            cat << EOF > post_build_lava_parameters
            DEVICE_TYPE=${DEVICE_TYPE}
            BUNDLE_STREAM_NAME=${BUNDLE_STREAM_NAME}
            CUSTOM_JSON_URL=${JOB_URL}/ws/custom_lava_job_definition.json
            LAVA_SERVER=${LAVA_SERVER}
            KERNEL_URL=${KERNEL_URL}
            DTB_URL=${DTB_URL}
            HWPACK_BUILD_URL=${HWPACK_BUILD_URL}
            hwpack_type=${hwpack_type}
            EOF
        - inject:
            properties-file: post_build_lava_parameters
        - shell: |
            rm -rf configs lci-build-tools
            git clone --depth 1 http://git.linaro.org/ci/lci-build-tools.git
            git clone --depth 1 http://git.linaro.org/ci/job/configs.git
            ./lci-build-tools/yaml-to-json.py configs/coresight/lava-job-definitions/${DEVICE_TYPE}/template.yaml > custom_lava_job_definition.json
        - trigger-builds:
            - project: 'post-build-lava'
              property-file: post_build_lava_parameters
              block: true
    publishers:
        - email:
            recipients: 'mathieu.poirier@linaro.org fathi.boudra@linaro.org'
