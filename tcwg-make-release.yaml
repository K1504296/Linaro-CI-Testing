# http://docs.openstack.org/infra/jenkins-job-builder/definition.html
- job:
    name: tcwg-make-release
    project-type: matrix
    defaults: global
    properties:
        - authorization:
            anonymous:
                - job-read
                - job-extended-read
            linaro:
                - job-build
                - job-cancel
        - build-discarder:
            days-to-keep: 30
            num-to-keep: 10
    parameters:
        - string:
            name: gcc_src
            default: 'gcc-linaro-5.3-2016.02.tar.xz'
            description: 'The source of GCC. Specify as it would be passed to abe.sh, either a source tarballs, git branch and revision, or a URL of a tarball e.g., "gcc-linaro-5.3-2016.02.tar.xz"'
        - string:
            name: binutils_src
            default: ''
            description: 'A optional revision of binutils to use for this release, e.g., "binutils-gdb.git~linaro_binutils-2_25-branch"'
        - string:
            name: glibc_src
            default: ''
            description: 'An optional revision of Glibc to use for this release, e.g., "glibc.git~linaro/2.21/master"'
        - string:
            name: date
            default: ''
            description: 'An optional release string to use, e.g., "2016.05", "2016.05-rc3", "2016.05-1", "2016.05-1-rc2". The default is to extract the release string from the gcc_src field'
        - string:
            name: manifest_src
            default: ''
            description: 'Import a manifest file to reproduce a release'
        - string:
            name: toolchain_config
            default: 'default'
            description: 'Toolchain version config, e.g., "default", "gcc5", or "gcc6"'
        - string:
            name: abe_branch
            default: refs/heads/master
            description: 'ABE revision to test'
        - string:
            name: scripts_branch
            default: master
            description: 'Scripts revision to use'
        - choice:
            name: debug
            choices:
                - none
                - abe
                - yaml
            description: "Level of debug information: none - No debugging information, abe - ABE debugging information, yaml - tcwg-make-release.yaml debug information (and exit)."
        - string:
            name: fileserver
            default: dev-01.tcwglab
            description: 'Remote file server for logs and binaries'
        - bool:
            name: testrelease
            default: 'true'
            description: 'Run test-release if make-release is successful'
    disabled: false
    node: tcwg-x86_64-dev-01
    retry-count: 3
    concurrent: true
    display-name: 'TCWG Make Release'
    scm:
        - git:
            url: https://git-us.linaro.org/toolchain/abe.git
            refspec: +refs/changes/*:refs/remotes/changes/*
            branches:
                - ${abe_branch}
            skip-tag: true
            shallow-clone: true
            basedir: abe
    axes:
        - axis:
            type: slave
            name: label
            values:
               - docker-trusty-amd64-tcwg-build
               - docker-trusty-i386-tcwg-build
        - axis:
            type: user-defined
            name: target
            values:
                - aarch64-elf
                - aarch64-linux-gnu
                - aarch64_be-elf
                - aarch64_be-linux-gnu
                - armv8l-linux-gnueabihf
                - arm-eabi
                - arm-linux-gnueabi
                - arm-linux-gnueabihf
                - armeb-eabi
                - armeb-linux-gnueabi
                - armeb-linux-gnueabihf
    execution-strategy:
        sequential: false
    wrappers:
        - timeout:
            timeout: 300
        - timestamps
        - ssh-agent-credentials:
            users:
              - 'e0958a95-204f-4c14-a66c-5e2be6c5d50a' # tcwg-buildslave
        - build-name:
            name: '#${BUILD_NUMBER}-${ENV,var="date"}'
    builders:
      - shell: |
            #!/bin/bash

            if test x"${debug}" = x"abe"; then
              shell="/bin/bash -x"
              set -x
            else
                shell="/bin/bash"
            fi

            if test x"${debug}" = x"yaml"; then
                echo WORKSPACE:  $WORKSPACE
                echo CURRENTDIR: `pwd`
                ls -lR
                exit 0
            fi

            git config --global user.email "tcwg-buildslave@linaro.org"
            git config --global user.name "TCWG BuildSlave"

            tcwg_release=${date}
            # If there is no date set, extract release information from the gcc_src
            if test "${date:+set}" != "set"; then
                tcwg_release="`basename $gcc_src | cut -d '-' -f4-`"
                tcwg_release=${tcwg_release%".tar.xz"}
            fi

            # This job always uses Canadian cross builds and builds 2
            # toolchains at a time when run on a amd64 slave.
            # When run on a i386 host, no need to duplicate the
            # Canadian cross build for mingw.
            case ${label} in
              docker-*-amd64-tcwg*)
                host=x86_64
                export canadian=true ;;
              docker-*-i386-tcwg*)
                host=i686
                export canadian=no ;;
             *)
                echo "ERROR: unsupported label: ${label}"
                exit 1
                ;;
            esac
            git clone -b $scripts_branch --depth 1 https://git-us.linaro.org/toolchain/jenkins-scripts
            ${shell} ${WORKSPACE}/jenkins-scripts/MakeRelease.job --abedir ${WORKSPACE}/abe --target ${target}${tcwg_release:+ --date ${tcwg_release}} --fileserver ${fileserver} --toolchainconfig ${toolchain_config}
            if test $? -gt 0; then
              exit 1
            fi

            # We always build a Linux tarball, even in canadian cross mode
            tarball_linux="`find ${WORKSPACE} -name gcc-linaro\*${tcwg_release}\*${target}\*.tar.xz | grep -v mingw`"
            if test x"${tarball_linux}" = x""; then
              echo "ERROR: no binary Linux tarball found!"
              exit 1
            fi

            if test x"${canadian}" = x"true"; then
              tarball_mingw="`find ${WORKSPACE} -name gcc-linaro\*${tcwg_release}\*${target}\*.tar.xz | grep mingw`"
              if test x"${tarball_mingw}" = x""; then
                echo "ERROR: no binary MingW tarball found!"
                exit 1
              fi
            fi

            # Extract the gcc_version information from gcc_src to determine
            # which directory to copy the tarballs into.
            gcc_version="`basename $gcc_src | awk -F '-' '{ print $3 }'`"
            tcwg_version="`echo $gcc_version | awk -F '.' '{ print $1 }'`"
            gcc_minor="`echo $gcc_version | awk -F '.' '{ print $2 }'`"
            if test ${tcwg_version} -lt 5; then
                tcwg_version="${tcwg_version}.${gcc_minor}"
            fi

            buildid=`printf '%04d' ${BUILD_NUMBER}`

            if $testrelease; then
              tarball_linux="`basename ${tarball_linux}`"
              tarball_linux_url="http://${fileserver}/~$USER/releases/binaries/${tcwg_version}-${tcwg_release}-${buildid}/${target}/${tarball_linux}"
              cat << EOF > tcwg.params.linux
            tarball_url=${tarball_linux_url}
            release=${tcwg_release}
            target=${host}-${target}
            EOF

              if test x"${canadian}" = x"true"; then
                tarball_mingw="`basename ${tarball_mingw}`"
                tarball_mingw_url="http://${fileserver}/~$USER/releases/binaries/${tcwg_version}-${tcwg_release}-${buildid}/${target}/${tarball_mingw}"
                cat << EOF > tcwg.params.mingw
            tarball_url=${tarball_mingw_url}
            release=${tcwg_release}
            target=mingw-${target}
            EOF
              fi
            fi

      - conditional-step:
          condition-kind: file-exists
          condition-filename: tcwg.params.linux
          steps:
              - trigger-builds:
                  - project: 'tcwg-test-release'
                    property-file: tcwg.params.linux
                    current-parameters: true
                    block: false
      - conditional-step:
          condition-kind: file-exists
          condition-filename: tcwg.params.mingw
          steps:
              - trigger-builds:
                  - project: 'tcwg-test-release'
                    property-file: tcwg.params.mingw
                    current-parameters: true
                    block: false
    publishers:
        - archive:
            artifacts: 'MakeRelease*.log.xz'
            latest-only: false
        - email:
            recipients: 'ryan.arnold@linaro.org'
        - email-ext:
            recipients: 'christophe.lyon@linaro.org'
            always: true
            send-to:
              requester
              recipients
