- job:
    name: lt-qcom-openembedded-images
    project-type: matrix
    defaults: global
    logrotate:
        daysToKeep: 30
        numToKeep: 30
        artifactNumToKeep: 1
    properties:
        - authorization:
            anonymous:
                - job-read
                - job-extended-read
                - job-workspace
            linaro-landing-team-qualcomm-personnel:
                - job-build
                - job-cancel
    parameters:
        - string:
            name: IMAGES
            default: 'rpb-console-image rpb-desktop-image'
    disabled: false
    node: build
    display-name: 'OpenEmbedded/Yocto Project based images for Qualcomm Snapdragon'
    axes:
        - axis:
            type: user-defined
            name: MANIFEST_BRANCH
            values:
                - master
                - jethro
        - axis:
            type: user-defined
            name: OE_MACHINE
            values:
                - dragonboard-410c
                - ifc6410
        - axis:
            type: slave
            name: label
            values:
                - docker-utopic-amd64
    execution-strategy:
        sequential: true
    wrappers:
        - timestamps
        - matrix-tie-parent:
            node: build
    builders:
        - shell: |
            #!/bin/bash

            set -ex

            trap cleanup_exit INT TERM EXIT

            cleanup_exit()
            {
                echo "Running cleanup_exit..."
            }

            sudo sed -i -e 's/archive.ubuntu.com\|security.ubuntu.com/old-releases.ubuntu.com/g' /etc/apt/sources.list
            sudo apt-get update
            sudo apt-get install -y python-pycurl chrpath gawk texinfo libsdl1.2-dev

            mkdir -p ${HOME}/bin
            curl https://storage.googleapis.com/git-repo-downloads/repo > ${HOME}/bin/repo
            chmod a+x ${HOME}/bin/repo
            export PATH=${HOME}/bin:${PATH}

            # initialize repo if not done already
            if [ ! -e ".repo/manifest.xml" ]; then
               repo init -u https://github.com/ndechesne/qcom-oe-manifest.git -b ${MANIFEST_BRANCH}

               # link to shared downloads on persistent disk
               # our builds config is expecting downloads and sstate-cache, here.
               mkdir -p ${HOME}/srv/oe/downloads ${HOME}/srv/oe/sstate-cache
               ln -s ${HOME}/srv/oe/downloads
               ln -s ${HOME}/srv/oe/sstate-cache
            fi

            repo sync
            repo manifest -r
            MANIFEST_COMMIT=$(cd .repo/manifests && git rev-parse --short HEAD)

            # the setup-environment will create local.conf, make sure we get rid
            # of old config. Let's remove the previous TMPDIR as well. We want
            # to preserve build/buildhistory though.
            rm -rf build/conf build/tmp-glibc/
            QCOM_EULA=1 MACHINE=${OE_MACHINE} source setup-environment build

            # Add job BUILD_NUMBER to image file names
            echo "IMAGE_NAME_append = \"-${BUILD_NUMBER}\"" >> conf/local.conf

            bitbake ${IMAGES}

            # Archive buildhistory
            cd buildhistory
            repo manifest -r > MSG
            git tag -F MSG ${MANIFEST_BRANCH}-${BUILD_NUMBER}-git${MANIFEST_COMMIT}
            # TODO: push buildhistory
            cd -

            # Prepare files to publish
            rm -f ${WORKSPACE}/build/tmp-glibc/deploy/images/${OE_MACHINE}/*.txt
            find ${WORKSPACE}/build/tmp-glibc/deploy/images/${OE_MACHINE} -type l -delete

            # Create MD5SUMS file
            (cd ${WORKSPACE}/build/tmp-glibc/deploy/images/${OE_MACHINE} && md5sum * > MD5SUMS.txt)

            wget -q https://git.linaro.org/ci/publishing-api.git/blob_plain/HEAD:/linaro-cp.py -O ${HOME}/bin/linaro-cp.py
        - linaro-publish-token:
            host: builds.96boards.org
        - shell: |
            #!/bin/bash
            set -ex

            # Publish on 96boards.org
            if [ "${OE_MACHINE}" == "dragonboard-410c" ]; then
               time python ${HOME}/bin/linaro-cp.py \
                    --server ${PUBLISH_SERVER} \
                    --link-latest \
                    ${WORKSPACE}/build/tmp-glibc/deploy/images/${OE_MACHINE} \
                    snapshots/${OE_MACHINE//-}/linaro/openembedded/${MANIFEST_BRANCH}/${BUILD_NUMBER}
            else
                echo "Do not publish ${OE_MACHINE} on ${PUBLISH_SERVER}"
            fi
        - linaro-publish-token:
            host: snapshots.linaro.org
        - shell: |
            #!/bin/bash
            set -ex

            # Publish on linaro.org
            if [ "${OE_MACHINE}" == "ifc6410" ]; then
               time python ${HOME}/bin/linaro-cp.py \
                    --server ${PUBLISH_SERVER} \
                    --link-latest \
                    ${WORKSPACE}/build/tmp-glibc/deploy/images/${OE_MACHINE} \
                    openembedded/pre-built/${OE_MACHINE//-}/${MANIFEST_BRANCH}/${BUILD_NUMBER}
            else
                echo "Do not publish ${OE_MACHINE} on ${PUBLISH_SERVER}"
            fi
    publishers:
        - archive:
            artifacts: 'build/tmp-glibc/deploy/images/${OE_MACHINE}/*'
        - email:
            recipients: 'nicolas.dechesne@linaro.org fathi.boudra@linaro.org'
        - ircbot:
            channels:
                - name: '#linaro-lt-qcomm'
                  password: ${LT_QCOM_KEY}
