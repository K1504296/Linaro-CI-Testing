- job:
    name: linux-arm-soc-for-next
    project-type: matrix
    defaults: global
    logrotate:
        daysToKeep: 30
        numToKeep: 30
    properties:
        - authorization:
            anonymous:
                - job-read
                - job-extended-read
    parameters:
        - file:
            name: defconfig.properties
        - password:
            name: LAVA_USER
            default: ${LAVA_USER}
        - password:
            name: LAVA_TOKEN
            default: ${LAVA_TOKEN}
    disabled: true
    node: linaro-kernel-ci
    child-workspace: .
    display-name: 'DELETE ME'
    scm:
        - git:
            url: git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc.git
            refspec: +refs/heads/for-next:refs/remotes/origin/for-next
            name: origin
            branches: 
                - refs/heads/for-next
            skip-tag: true
            shallow-clone: true
            wipe-workspace: false
    axes:
        - axis:
            type: user-defined
            name: ARCH
            values:
                - arm
                - arm64
        - axis:
            type: dynamic
            name: defconfig
            values:
                - defconfig_list
        - axis:
            type: slave
            name: label
            values:
                - linaro-kernel-ci
    execution-strategy:
        combination-filter: |
            (ARCH=="arm" && defconfig!="defconfig") || (ARCH=="arm64" && defconfig=="defconfig")
        sequential: true
    wrappers:
        - timestamps
        - build-name:
            name: '#${BUILD_NUMBER}-${GIT_REVISION,length=8}'
        - matrix-tie-parent:
            node: linaro-kernel-ci
    builders:
        - linaro-publish-token
        - shell: |
            #!/bin/bash

            trap cleanup_exit INT TERM EXIT

            cleanup_exit()
            {
              cd ${WORKSPACE}
              rm -rf lci-build-tools
              rm -rf builddir*
              rm -rf out
              rm -rf configs
            }

            export LANG=C
            CCACHE_DIR="${HOME}/srv/ccache"
            CCACHE_UNIFY=1
            CCACHE_SLOPPINESS=file_macro,include_file_mtime,time_macros
            export CCACHE_DIR CCACHE_UNIFY CCACHE_SLOPPINESS 
            export use_ccache=true
            export make_silent=true
            export make_deb=false
            export make_bootwrapper=false
            export make_install=true
            export kernel_flavour="${defconfig}"
            export kernel_config="${defconfig}_defconfig"
            export MAKE_DTBS=true
            export tcbindir="${HOME}/srv/toolchain/arm-tc-15.02/bin"
            export toolchain_url="http://releases.linaro.org/15.02/components/toolchain/binaries/arm-linux-gnueabihf/gcc-linaro-4.9-2015.02-3-x86_64_arm-linux-gnueabihf.tar.xz"

            [ "${ARCH}" = "arm64" ] && export kernel_config="${defconfig}"
            [ "${ARCH}" = "arm64" ] && {
              export tcbindir="${HOME}/srv/toolchain/arm64-tc-15.02/bin"
              export toolchain_url="http://releases.linaro.org/15.02/components/toolchain/binaries/aarch64-linux-gnu/gcc-linaro-4.9-2015.02-3-x86_64_aarch64-linux-gnu.tar.xz"
            }

            # XXX work around vexpress defconfig
            #echo "CONFIG_DEVTMPFS=y" >> arch/arm/configs/vexpress_defconfig
            #echo "CONFIG_DEVTMPFS_MOUNT=y" >> arch/arm/configs/vexpress_defconfig
            #echo "CONFIG_REGULATOR=y" >> arch/arm/configs/vexpress_defconfig
            #echo "CONFIG_REGULATOR_VEXPRESS=y" >> arch/arm/configs/vexpress_defconfig
            #echo "CONFIG_EXT4_FS=y" >> arch/arm/configs/vexpress_defconfig

            test -d lci-build-tools || git clone --depth 1 https://git.linaro.org/git/ci/lci-build-tools.git lci-build-tools
            bash lci-build-tools/jenkins_kernel_build_inst

            # XXX b2120 vmlinux
            [ "${defconfig}" = "multi_v7" ] && cp -a builddir-*-${kernel_flavour}/vmlinux out/ || true
            # XXX mustang uImage
            [ "${ARCH}" = "arm64" ] && mkimage -A arm -O linux -C none -T kernel -a 0x00080000 -e 0x00080000 -n Linux -d out/Image out/uImage || true

            # Publish to snapshots
            ${HOME}/bin/linaro-cp --api_version 3 out kernel-hwpack/linux-arm-soc-for-next/${defconfig}/${BUILD_NUMBER}

            CCACHE_DIR=${CCACHE_DIR} ccache -M 30G
            CCACHE_DIR=${CCACHE_DIR} ccache -s

            # Start LAVA dance
            test -d configs || git clone --depth 1 http://git.linaro.org/ci/job/configs.git

            export BUNDLE_STREAM_NAME=/anonymous/fabo/
            export LAVA_SERVER=validation.linaro.org/RPC2/
            export KERNEL_URL=http://snapshots.linaro.org/kernel-hwpack/linux-arm-soc-for-next/${defconfig}/${BUILD_NUMBER}
            export DTB_URL=${KERNEL_URL}/dtbs
            export ROOTFS_BUILD_URL=http://releases.linaro.org/14.11/openembedded/images/minimal-armv7a/linaro-image-minimal-genericarmv7a-20141121-301.rootfs.tar.gz
            [ "${ARCH}" = "arm64" ] && export ROOTFS_BUILD_URL=http://releases.linaro.org/14.11/openembedded/images/minimal-armv8/linaro-image-minimal-genericarmv8-20141122-721.rootfs.tar.gz

            # Hack to use submit LAVA jobs directly
            python lci-build-tools/dtb-to-device.py

