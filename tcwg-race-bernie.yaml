- job:
    name: 'tcwg-race-bernie'
    project-type: matrix
    defaults: global
    logrotate:
        daysToKeep: 30
        numToKeep: 60
        artifactDaysToKeep: 2
        artifactNumToKeep: 40
    properties:
        - authorization:
            anonymous:
                - job-read
                - job-extended-read
            linaro:
                - job-build
                - job-cancel
    disabled: false
    node: tcwg-x86_64-ex40
    retry-count: 3
    concurrent: true
    display-name: 'TCWG ZZZ Race Bernie'
    axes:
        - axis:
            type: slave
            name: label
            values:
                - tcwg-x86_64-ex40
        - axis:
            type: user-defined
            name: target
            values:
                - aarch64-linux-gnu
                - arm-linux-gnueabihf
                - fake
    execution-strategy:
        sequential: false
    wrappers:
        - timeout:
            timeout: 600
        - timestamps
        - build-name:
            name: '#${BUILD_NUMBER}-${ENV,var="gcc_branch"}'
    builders:
        - shell: |
            #!/bin/bash

            set -e
            set -x

            rm -f artifact_parameters
            touch artifact_parameters
            rm -rf bench_params
            touch bench_params
            if test x"${target}" = xfake; then
              exit 0
            fi
            #Do not trigger a benchmark if jenkins.sh exits without error and
            #without having built a toolchain (probably because --norebuild was
            #set and the logs already existed).
            #trigger-builds will only trigger if the properties file exists, so
            #create the file conditionally
                toolchain="toolchain_${target}"
                sysroot="sysroot_${target}"
              cat > bench_params <<EOF
            BENCHMARK=Coremark-Pro
            TOOLCHAIN=${JENKINS_URL}/job/${JOB_NAME}/${BUILD_NUMBER}/artifact/${toolchain}
            SYSROOT=${JENKINS_URL}/job/${JOB_NAME}/${BUILD_NUMBER}/artifact/${sysroot}
            TARGET_CONFIG=Juno-A57
            RUN_FLAGS=quickrun
            Overrides=BUNDLE_STREAM=/anonymous/backbench/
            LAVA_JOB_NAME=Backbench: ${target} Coremark-Pro on Juno-A57"
                cat > artifact_parameters << EOF
            TOOLCHAIN=${toolchain}
            SYSROOT=${sysroot}
            EOF
        - inject:
            properties-file: 'artifact_parameters'
    publishers:
      - archive:
          artifacts: '${TOOLCHAIN},${SYSROOT},source.tar.xz'
          only-if-success: true
          fingerprint: true
          allow-empty: true
      #- trigger-parameterized-builds:
      #  - project: tcwg-benchmark
      #    predefined-parameters: ${BENCHMARK_PARAMS}
      - copy-to-master:
          includes:
            - bench_params
      - trigger-parameterized-builds:
        - project: tcwg-benchmark
          property-file: label/tcwg-x86-64-ex40/target/aarch64-linux-gnu/bench_params
        - project: tcwg-benchmark
          property-file: label/tcwg-x86-64-ex40/target/arm-linux-gnueabihf/bench_params
        - project: tcwg-benchmark
          property-file: label/tcwg-x86-64-ex40/target/*/bench_params
